package com.uaf.grtwf.webservice;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.0.3
 * 2015-02-05T12:37:13.669+08:00
 * Generated source version: 3.0.3
 * 
 */
@WebServiceClient(name = "ApprovalWebService", 
                  wsdlLocation = "file:/D:/workspace_report/grtwf/src/main/resources/approval.wsdl",
                  targetNamespace = "http://webservice.grtwf.uaf.com/") 
public class ApprovalWebService_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://webservice.grtwf.uaf.com/", "ApprovalWebService");
    public final static QName ApprovalServicePort = new QName("http://webservice.grtwf.uaf.com/", "ApprovalServicePort");
    static {
        URL url = null;
        try {
            url = new URL("file:/D:/workspace_report/grtwf/src/main/resources/approval.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ApprovalWebService_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/D:/workspace_report/grtwf/src/main/resources/approval.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ApprovalWebService_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ApprovalWebService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ApprovalWebService_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns ApprovalWebService
     */
    @WebEndpoint(name = "ApprovalServicePort")
    public ApprovalWebService getApprovalServicePort() {
        return super.getPort(ApprovalServicePort, ApprovalWebService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ApprovalWebService
     */
    @WebEndpoint(name = "ApprovalServicePort")
    public ApprovalWebService getApprovalServicePort(WebServiceFeature... features) {
        return super.getPort(ApprovalServicePort, ApprovalWebService.class, features);
    }

}

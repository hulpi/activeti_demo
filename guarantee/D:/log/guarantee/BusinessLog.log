[uaf-guarantee] 2015-01-17 01:17:19,727 INFO [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316) | Loading XML bean definitions from class path resource [applicationContext-test.xml]
[uaf-guarantee] 2015-01-17 01:17:22,545 INFO [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513) | Refreshing org.springframework.context.support.GenericApplicationContext@5d6d2633: startup date [Sat Jan 17 01:17:22 GMT+08:00 2015]; root of context hierarchy
[uaf-guarantee] 2015-01-17 01:17:23,083 INFO [main] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(172) | Loading properties file from class path resource [application.properties]
[uaf-guarantee] 2015-01-17 01:17:23,097 INFO [main] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(172) | Loading properties file from class path resource [application.test.properties]
[uaf-guarantee] 2015-01-17 01:17:23,106 INFO [main] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(172) | Loading properties file from class path resource [application.test.local.properties]
[uaf-guarantee] 2015-01-17 01:17:23,108 WARN [main] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(181) | Could not load properties from class path resource [application.test.local.properties]: class path resource [application.test.local.properties] cannot be opened because it does not exist
[uaf-guarantee] 2015-01-17 01:17:23,723 INFO [main] org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.initDatabase(147) | Creating embedded database 'dataSource'
[uaf-guarantee] 2015-01-17 01:17:24,401 INFO [main] org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(431) | Executing SQL script from class path resource [org/activiti/db/create/activiti.h2.create.engine.sql]
[uaf-guarantee] 2015-01-17 01:17:24,887 INFO [main] org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(490) | Executed SQL script from class path resource [org/activiti/db/create/activiti.h2.create.engine.sql] in 486 ms.
[uaf-guarantee] 2015-01-17 01:17:24,888 INFO [main] org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(431) | Executing SQL script from class path resource [org/activiti/db/create/activiti.h2.create.history.sql]
[uaf-guarantee] 2015-01-17 01:17:24,914 INFO [main] org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(490) | Executed SQL script from class path resource [org/activiti/db/create/activiti.h2.create.history.sql] in 25 ms.
[uaf-guarantee] 2015-01-17 01:17:24,915 INFO [main] org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(431) | Executing SQL script from class path resource [org/activiti/db/create/activiti.h2.create.identity.sql]
[uaf-guarantee] 2015-01-17 01:17:24,944 INFO [main] org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(490) | Executed SQL script from class path resource [org/activiti/db/create/activiti.h2.create.identity.sql] in 29 ms.
[uaf-guarantee] 2015-01-17 01:17:25,217 INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(332) | Building JPA container EntityManagerFactory for persistence unit 'default'
[uaf-guarantee] 2015-01-17 01:17:25,391 DEBUG [main] org.hibernate.ejb.Ejb3Configuration.<clinit>(144) | Logging Provider: org.jboss.logging.Log4jLoggerProvider
[uaf-guarantee] 2015-01-17 01:17:25,728 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration boolean -> org.hibernate.type.BooleanType@15d45d9
[uaf-guarantee] 2015-01-17 01:17:25,730 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration boolean -> org.hibernate.type.BooleanType@15d45d9
[uaf-guarantee] 2015-01-17 01:17:25,731 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@15d45d9
[uaf-guarantee] 2015-01-17 01:17:25,768 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b06433d
[uaf-guarantee] 2015-01-17 01:17:25,791 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration true_false -> org.hibernate.type.TrueFalseType@716136f0
[uaf-guarantee] 2015-01-17 01:17:25,794 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration yes_no -> org.hibernate.type.YesNoType@3e81018b
[uaf-guarantee] 2015-01-17 01:17:25,798 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration byte -> org.hibernate.type.ByteType@4e84f566
[uaf-guarantee] 2015-01-17 01:17:25,808 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration byte -> org.hibernate.type.ByteType@4e84f566
[uaf-guarantee] 2015-01-17 01:17:25,809 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e84f566
[uaf-guarantee] 2015-01-17 01:17:25,812 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration character -> org.hibernate.type.CharacterType@4ad2efa1
[uaf-guarantee] 2015-01-17 01:17:25,813 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration char -> org.hibernate.type.CharacterType@4ad2efa1
[uaf-guarantee] 2015-01-17 01:17:25,814 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4ad2efa1
[uaf-guarantee] 2015-01-17 01:17:25,911 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration short -> org.hibernate.type.ShortType@1217e615
[uaf-guarantee] 2015-01-17 01:17:25,912 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration short -> org.hibernate.type.ShortType@1217e615
[uaf-guarantee] 2015-01-17 01:17:25,914 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1217e615
[uaf-guarantee] 2015-01-17 01:17:25,938 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration integer -> org.hibernate.type.IntegerType@4b8706f6
[uaf-guarantee] 2015-01-17 01:17:25,939 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration int -> org.hibernate.type.IntegerType@4b8706f6
[uaf-guarantee] 2015-01-17 01:17:25,940 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4b8706f6
[uaf-guarantee] 2015-01-17 01:17:25,972 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration long -> org.hibernate.type.LongType@30cafa1
[uaf-guarantee] 2015-01-17 01:17:25,974 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration long -> org.hibernate.type.LongType@30cafa1
[uaf-guarantee] 2015-01-17 01:17:25,975 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Long -> org.hibernate.type.LongType@30cafa1
[uaf-guarantee] 2015-01-17 01:17:25,982 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration float -> org.hibernate.type.FloatType@16e334a
[uaf-guarantee] 2015-01-17 01:17:25,988 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration float -> org.hibernate.type.FloatType@16e334a
[uaf-guarantee] 2015-01-17 01:17:25,990 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Float -> org.hibernate.type.FloatType@16e334a
[uaf-guarantee] 2015-01-17 01:17:26,005 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration double -> org.hibernate.type.DoubleType@6e75d758
[uaf-guarantee] 2015-01-17 01:17:26,007 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration double -> org.hibernate.type.DoubleType@6e75d758
[uaf-guarantee] 2015-01-17 01:17:26,008 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6e75d758
[uaf-guarantee] 2015-01-17 01:17:26,019 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2778c490
[uaf-guarantee] 2015-01-17 01:17:26,020 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2778c490
[uaf-guarantee] 2015-01-17 01:17:26,024 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a329572
[uaf-guarantee] 2015-01-17 01:17:26,025 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a329572
[uaf-guarantee] 2015-01-17 01:17:26,028 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration string -> org.hibernate.type.StringType@11c0b8a0
[uaf-guarantee] 2015-01-17 01:17:26,049 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.String -> org.hibernate.type.StringType@11c0b8a0
[uaf-guarantee] 2015-01-17 01:17:26,054 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10320399
[uaf-guarantee] 2015-01-17 01:17:26,061 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@536b98c3
[uaf-guarantee] 2015-01-17 01:17:26,065 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration url -> org.hibernate.type.UrlType@1344e858
[uaf-guarantee] 2015-01-17 01:17:26,066 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.net.URL -> org.hibernate.type.UrlType@1344e858
[uaf-guarantee] 2015-01-17 01:17:26,089 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration date -> org.hibernate.type.DateType@51f88fbd
[uaf-guarantee] 2015-01-17 01:17:26,092 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.sql.Date -> org.hibernate.type.DateType@51f88fbd
[uaf-guarantee] 2015-01-17 01:17:26,096 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration time -> org.hibernate.type.TimeType@31d1fc02
[uaf-guarantee] 2015-01-17 01:17:26,096 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.sql.Time -> org.hibernate.type.TimeType@31d1fc02
[uaf-guarantee] 2015-01-17 01:17:26,103 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration timestamp -> org.hibernate.type.TimestampType@46b44eb4
[uaf-guarantee] 2015-01-17 01:17:26,104 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@46b44eb4
[uaf-guarantee] 2015-01-17 01:17:26,105 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.Date -> org.hibernate.type.TimestampType@46b44eb4
[uaf-guarantee] 2015-01-17 01:17:26,108 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7d57bf4c
[uaf-guarantee] 2015-01-17 01:17:26,111 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration calendar -> org.hibernate.type.CalendarType@51f1e39b
[uaf-guarantee] 2015-01-17 01:17:26,112 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@51f1e39b
[uaf-guarantee] 2015-01-17 01:17:26,112 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@51f1e39b
[uaf-guarantee] 2015-01-17 01:17:26,114 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@70a1c582
[uaf-guarantee] 2015-01-17 01:17:26,118 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration locale -> org.hibernate.type.LocaleType@6edcb6b4
[uaf-guarantee] 2015-01-17 01:17:26,119 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6edcb6b4
[uaf-guarantee] 2015-01-17 01:17:26,122 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration currency -> org.hibernate.type.CurrencyType@32486cdd
[uaf-guarantee] 2015-01-17 01:17:26,123 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32486cdd
[uaf-guarantee] 2015-01-17 01:17:26,162 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration timezone -> org.hibernate.type.TimeZoneType@20823c6d
[uaf-guarantee] 2015-01-17 01:17:26,163 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20823c6d
[uaf-guarantee] 2015-01-17 01:17:26,165 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration class -> org.hibernate.type.ClassType@3979c7cf
[uaf-guarantee] 2015-01-17 01:17:26,166 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3979c7cf
[uaf-guarantee] 2015-01-17 01:17:26,172 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16ea7549
[uaf-guarantee] 2015-01-17 01:17:26,172 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16ea7549
[uaf-guarantee] 2015-01-17 01:17:26,174 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f549ceb
[uaf-guarantee] 2015-01-17 01:17:26,177 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@201532fc
[uaf-guarantee] 2015-01-17 01:17:26,182 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration binary -> org.hibernate.type.BinaryType@7a9b777a
[uaf-guarantee] 2015-01-17 01:17:26,183 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration byte[] -> org.hibernate.type.BinaryType@7a9b777a
[uaf-guarantee] 2015-01-17 01:17:26,184 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration [B -> org.hibernate.type.BinaryType@7a9b777a
[uaf-guarantee] 2015-01-17 01:17:26,188 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@66e8c7db
[uaf-guarantee] 2015-01-17 01:17:26,191 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@66e8c7db
[uaf-guarantee] 2015-01-17 01:17:26,193 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@66e8c7db
[uaf-guarantee] 2015-01-17 01:17:26,195 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration image -> org.hibernate.type.ImageType@6ce7ce4c
[uaf-guarantee] 2015-01-17 01:17:26,206 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration characters -> org.hibernate.type.CharArrayType@59b70f9e
[uaf-guarantee] 2015-01-17 01:17:26,207 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration char[] -> org.hibernate.type.CharArrayType@59b70f9e
[uaf-guarantee] 2015-01-17 01:17:26,208 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration [C -> org.hibernate.type.CharArrayType@59b70f9e
[uaf-guarantee] 2015-01-17 01:17:26,211 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@38666d83
[uaf-guarantee] 2015-01-17 01:17:26,212 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@38666d83
[uaf-guarantee] 2015-01-17 01:17:26,213 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@38666d83
[uaf-guarantee] 2015-01-17 01:17:26,226 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration text -> org.hibernate.type.TextType@33a998c7
[uaf-guarantee] 2015-01-17 01:17:26,229 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration ntext -> org.hibernate.type.NTextType@3ab28980
[uaf-guarantee] 2015-01-17 01:17:26,250 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration blob -> org.hibernate.type.BlobType@114562c5
[uaf-guarantee] 2015-01-17 01:17:26,252 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@114562c5
[uaf-guarantee] 2015-01-17 01:17:26,253 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5da631c2
[uaf-guarantee] 2015-01-17 01:17:26,280 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration clob -> org.hibernate.type.ClobType@1bae939f
[uaf-guarantee] 2015-01-17 01:17:26,283 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1bae939f
[uaf-guarantee] 2015-01-17 01:17:26,300 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration nclob -> org.hibernate.type.NClobType@4095c5ec
[uaf-guarantee] 2015-01-17 01:17:26,301 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4095c5ec
[uaf-guarantee] 2015-01-17 01:17:26,304 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@779d9c0d
[uaf-guarantee] 2015-01-17 01:17:26,306 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2354c054
[uaf-guarantee] 2015-01-17 01:17:26,309 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration serializable -> org.hibernate.type.SerializableType@7acdba53
[uaf-guarantee] 2015-01-17 01:17:26,359 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration object -> org.hibernate.type.ObjectType@565539d8
[uaf-guarantee] 2015-01-17 01:17:26,360 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@565539d8
[uaf-guarantee] 2015-01-17 01:17:26,361 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7b4189d0
[uaf-guarantee] 2015-01-17 01:17:26,362 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@bbef5e8
[uaf-guarantee] 2015-01-17 01:17:26,363 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2602585e
[uaf-guarantee] 2015-01-17 01:17:26,363 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@63f796d0
[uaf-guarantee] 2015-01-17 01:17:26,364 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@13ce64f6
[uaf-guarantee] 2015-01-17 01:17:26,364 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53465ca2
[uaf-guarantee] 2015-01-17 01:17:26,365 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@306bba64
[uaf-guarantee] 2015-01-17 01:17:26,366 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@709a1411
[uaf-guarantee] 2015-01-17 01:17:26,496 INFO [main] org.hibernate.annotations.common.Version.<clinit>(37) | HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
[uaf-guarantee] 2015-01-17 01:17:26,638 INFO [main] org.hibernate.Version.logVersion(41) | HHH000412: Hibernate Core {4.2.5.Final}
[uaf-guarantee] 2015-01-17 01:17:26,916 INFO [main] org.hibernate.cfg.Environment.<clinit>(238) | HHH000206: hibernate.properties not found
[uaf-guarantee] 2015-01-17 01:17:26,957 INFO [main] org.hibernate.cfg.Environment.buildBytecodeProvider(345) | HHH000021: Bytecode provider name : javassist
[uaf-guarantee] 2015-01-17 01:17:27,717 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,719 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,722 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,723 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,729 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,732 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[uaf-guarantee] 2015-01-17 01:17:27,736 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,737 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,738 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,740 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,741 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,743 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,745 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,747 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,749 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,756 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration boolean -> org.hibernate.type.BooleanType@15d45d9
[uaf-guarantee] 2015-01-17 01:17:27,757 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration boolean -> org.hibernate.type.BooleanType@15d45d9
[uaf-guarantee] 2015-01-17 01:17:27,757 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@15d45d9
[uaf-guarantee] 2015-01-17 01:17:27,759 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b06433d
[uaf-guarantee] 2015-01-17 01:17:27,760 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration true_false -> org.hibernate.type.TrueFalseType@716136f0
[uaf-guarantee] 2015-01-17 01:17:27,760 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration yes_no -> org.hibernate.type.YesNoType@3e81018b
[uaf-guarantee] 2015-01-17 01:17:27,761 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration byte -> org.hibernate.type.ByteType@4e84f566
[uaf-guarantee] 2015-01-17 01:17:27,761 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration byte -> org.hibernate.type.ByteType@4e84f566
[uaf-guarantee] 2015-01-17 01:17:27,762 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e84f566
[uaf-guarantee] 2015-01-17 01:17:27,768 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration character -> org.hibernate.type.CharacterType@4ad2efa1
[uaf-guarantee] 2015-01-17 01:17:27,769 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration char -> org.hibernate.type.CharacterType@4ad2efa1
[uaf-guarantee] 2015-01-17 01:17:27,769 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4ad2efa1
[uaf-guarantee] 2015-01-17 01:17:27,770 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration short -> org.hibernate.type.ShortType@1217e615
[uaf-guarantee] 2015-01-17 01:17:27,772 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration short -> org.hibernate.type.ShortType@1217e615
[uaf-guarantee] 2015-01-17 01:17:27,772 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1217e615
[uaf-guarantee] 2015-01-17 01:17:27,772 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration integer -> org.hibernate.type.IntegerType@4b8706f6
[uaf-guarantee] 2015-01-17 01:17:27,773 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration int -> org.hibernate.type.IntegerType@4b8706f6
[uaf-guarantee] 2015-01-17 01:17:27,789 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4b8706f6
[uaf-guarantee] 2015-01-17 01:17:27,789 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration long -> org.hibernate.type.LongType@30cafa1
[uaf-guarantee] 2015-01-17 01:17:27,790 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration long -> org.hibernate.type.LongType@30cafa1
[uaf-guarantee] 2015-01-17 01:17:27,790 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Long -> org.hibernate.type.LongType@30cafa1
[uaf-guarantee] 2015-01-17 01:17:27,791 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration float -> org.hibernate.type.FloatType@16e334a
[uaf-guarantee] 2015-01-17 01:17:27,792 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration float -> org.hibernate.type.FloatType@16e334a
[uaf-guarantee] 2015-01-17 01:17:27,793 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Float -> org.hibernate.type.FloatType@16e334a
[uaf-guarantee] 2015-01-17 01:17:27,795 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration double -> org.hibernate.type.DoubleType@6e75d758
[uaf-guarantee] 2015-01-17 01:17:27,796 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration double -> org.hibernate.type.DoubleType@6e75d758
[uaf-guarantee] 2015-01-17 01:17:27,797 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6e75d758
[uaf-guarantee] 2015-01-17 01:17:27,797 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2778c490
[uaf-guarantee] 2015-01-17 01:17:27,803 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2778c490
[uaf-guarantee] 2015-01-17 01:17:27,804 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a329572
[uaf-guarantee] 2015-01-17 01:17:27,804 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a329572
[uaf-guarantee] 2015-01-17 01:17:27,805 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration string -> org.hibernate.type.StringType@11c0b8a0
[uaf-guarantee] 2015-01-17 01:17:27,805 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.String -> org.hibernate.type.StringType@11c0b8a0
[uaf-guarantee] 2015-01-17 01:17:27,805 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10320399
[uaf-guarantee] 2015-01-17 01:17:27,806 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@536b98c3
[uaf-guarantee] 2015-01-17 01:17:27,806 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration url -> org.hibernate.type.UrlType@1344e858
[uaf-guarantee] 2015-01-17 01:17:27,807 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.net.URL -> org.hibernate.type.UrlType@1344e858
[uaf-guarantee] 2015-01-17 01:17:27,831 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration date -> org.hibernate.type.DateType@51f88fbd
[uaf-guarantee] 2015-01-17 01:17:27,834 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.sql.Date -> org.hibernate.type.DateType@51f88fbd
[uaf-guarantee] 2015-01-17 01:17:27,835 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration time -> org.hibernate.type.TimeType@31d1fc02
[uaf-guarantee] 2015-01-17 01:17:27,836 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.sql.Time -> org.hibernate.type.TimeType@31d1fc02
[uaf-guarantee] 2015-01-17 01:17:27,845 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration timestamp -> org.hibernate.type.TimestampType@46b44eb4
[uaf-guarantee] 2015-01-17 01:17:27,847 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@46b44eb4
[uaf-guarantee] 2015-01-17 01:17:27,848 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.Date -> org.hibernate.type.TimestampType@46b44eb4
[uaf-guarantee] 2015-01-17 01:17:27,849 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7d57bf4c
[uaf-guarantee] 2015-01-17 01:17:27,872 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration calendar -> org.hibernate.type.CalendarType@51f1e39b
[uaf-guarantee] 2015-01-17 01:17:27,873 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@51f1e39b
[uaf-guarantee] 2015-01-17 01:17:27,874 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@51f1e39b
[uaf-guarantee] 2015-01-17 01:17:27,875 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@70a1c582
[uaf-guarantee] 2015-01-17 01:17:27,876 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration locale -> org.hibernate.type.LocaleType@6edcb6b4
[uaf-guarantee] 2015-01-17 01:17:27,877 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6edcb6b4
[uaf-guarantee] 2015-01-17 01:17:27,878 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration currency -> org.hibernate.type.CurrencyType@32486cdd
[uaf-guarantee] 2015-01-17 01:17:27,879 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32486cdd
[uaf-guarantee] 2015-01-17 01:17:27,879 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration timezone -> org.hibernate.type.TimeZoneType@20823c6d
[uaf-guarantee] 2015-01-17 01:17:27,880 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20823c6d
[uaf-guarantee] 2015-01-17 01:17:27,881 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration class -> org.hibernate.type.ClassType@3979c7cf
[uaf-guarantee] 2015-01-17 01:17:27,882 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3979c7cf
[uaf-guarantee] 2015-01-17 01:17:27,883 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16ea7549
[uaf-guarantee] 2015-01-17 01:17:27,884 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16ea7549
[uaf-guarantee] 2015-01-17 01:17:27,885 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f549ceb
[uaf-guarantee] 2015-01-17 01:17:27,899 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@201532fc
[uaf-guarantee] 2015-01-17 01:17:27,901 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration binary -> org.hibernate.type.BinaryType@7a9b777a
[uaf-guarantee] 2015-01-17 01:17:27,901 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration byte[] -> org.hibernate.type.BinaryType@7a9b777a
[uaf-guarantee] 2015-01-17 01:17:27,902 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration [B -> org.hibernate.type.BinaryType@7a9b777a
[uaf-guarantee] 2015-01-17 01:17:27,903 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@66e8c7db
[uaf-guarantee] 2015-01-17 01:17:27,903 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@66e8c7db
[uaf-guarantee] 2015-01-17 01:17:27,904 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@66e8c7db
[uaf-guarantee] 2015-01-17 01:17:27,906 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration image -> org.hibernate.type.ImageType@6ce7ce4c
[uaf-guarantee] 2015-01-17 01:17:27,912 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration characters -> org.hibernate.type.CharArrayType@59b70f9e
[uaf-guarantee] 2015-01-17 01:17:27,913 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration char[] -> org.hibernate.type.CharArrayType@59b70f9e
[uaf-guarantee] 2015-01-17 01:17:27,914 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration [C -> org.hibernate.type.CharArrayType@59b70f9e
[uaf-guarantee] 2015-01-17 01:17:27,914 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@38666d83
[uaf-guarantee] 2015-01-17 01:17:27,915 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@38666d83
[uaf-guarantee] 2015-01-17 01:17:27,915 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@38666d83
[uaf-guarantee] 2015-01-17 01:17:27,916 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration text -> org.hibernate.type.TextType@33a998c7
[uaf-guarantee] 2015-01-17 01:17:27,916 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration ntext -> org.hibernate.type.NTextType@3ab28980
[uaf-guarantee] 2015-01-17 01:17:27,919 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration blob -> org.hibernate.type.BlobType@114562c5
[uaf-guarantee] 2015-01-17 01:17:27,920 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@114562c5
[uaf-guarantee] 2015-01-17 01:17:27,920 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5da631c2
[uaf-guarantee] 2015-01-17 01:17:27,920 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration clob -> org.hibernate.type.ClobType@1bae939f
[uaf-guarantee] 2015-01-17 01:17:27,921 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1bae939f
[uaf-guarantee] 2015-01-17 01:17:27,921 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration nclob -> org.hibernate.type.NClobType@4095c5ec
[uaf-guarantee] 2015-01-17 01:17:27,922 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4095c5ec
[uaf-guarantee] 2015-01-17 01:17:27,922 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@779d9c0d
[uaf-guarantee] 2015-01-17 01:17:27,923 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2354c054
[uaf-guarantee] 2015-01-17 01:17:27,924 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration serializable -> org.hibernate.type.SerializableType@7acdba53
[uaf-guarantee] 2015-01-17 01:17:27,925 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration object -> org.hibernate.type.ObjectType@565539d8
[uaf-guarantee] 2015-01-17 01:17:27,925 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@565539d8
[uaf-guarantee] 2015-01-17 01:17:27,926 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@71107304
[uaf-guarantee] 2015-01-17 01:17:27,926 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6eef4599
[uaf-guarantee] 2015-01-17 01:17:27,927 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1ec278b5
[uaf-guarantee] 2015-01-17 01:17:27,927 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7182c2d9
[uaf-guarantee] 2015-01-17 01:17:27,928 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3fc66ec7
[uaf-guarantee] 2015-01-17 01:17:27,928 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c92eb86
[uaf-guarantee] 2015-01-17 01:17:27,929 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@11a4ea4f
[uaf-guarantee] 2015-01-17 01:17:27,930 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6212f195
[uaf-guarantee] 2015-01-17 01:17:27,931 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,931 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,932 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,937 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,938 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,939 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[uaf-guarantee] 2015-01-17 01:17:27,940 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,940 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,942 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,943 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,943 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,944 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,945 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,945 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,946 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[uaf-guarantee] 2015-01-17 01:17:27,958 DEBUG [main] org.hibernate.ejb.Ejb3Configuration.configure(528) | Processing PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@1feed786
	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@6e05b24c
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.SimpleDriverDataSource@37fcd402
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/apple/Documents/workspace/guarantee/guarantee/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		me.kafeitu.demo.activiti.entity.account.Group
		me.kafeitu.demo.activiti.entity.account.User
		me.kafeitu.demo.activiti.entity.customer.Application
		me.kafeitu.demo.activiti.entity.IdEntity
		me.kafeitu.demo.activiti.entity.oa.Leave
		me.kafeitu.demo.activiti.entity.oa.LeaveJpaEntity]
	Mapping files names []
	Properties []
[uaf-guarantee] 2015-01-17 01:17:27,964 DEBUG [main] org.hibernate.ejb.Ejb3Configuration.setDetectedArtifactsOnScanningContext(851) | Detect class: true; detect hbm: true
[uaf-guarantee] 2015-01-17 01:17:28,018 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.unqualify(126) | Searching mapped entities in jar/par: file:/Users/apple/Documents/workspace/guarantee/guarantee/target/test-classes/
[uaf-guarantee] 2015-01-17 01:17:28,020 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.dao.InitDataTest
[uaf-guarantee] 2015-01-17 01:17:28,364 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.dao.JpaMappingTest
[uaf-guarantee] 2015-01-17 01:17:28,396 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.dao.LeaveDaoTest
[uaf-guarantee] 2015-01-17 01:17:28,398 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.engine.ProcessEngineTest
[uaf-guarantee] 2015-01-17 01:17:28,399 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.process.ProcessTestDispatch
[uaf-guarantee] 2015-01-17 01:17:28,402 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.service.AbstractTest
[uaf-guarantee] 2015-01-17 01:17:28,404 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.service.oa.leave.LeaveManagerTest
[uaf-guarantee] 2015-01-17 01:17:28,432 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.service.oa.leave.LeaveWebserviceInWorkflowTest
[uaf-guarantee] 2015-01-17 01:17:28,440 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.service.oa.leave.LeaveWorkflowServiceTest
[uaf-guarantee] 2015-01-17 01:17:28,444 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.web.oa.LeaveControllerTest
[uaf-guarantee] 2015-01-17 01:17:28,445 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.web.user.UserControllerTest
[uaf-guarantee] 2015-01-17 01:17:28,723 DEBUG [main] org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(59) | Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[uaf-guarantee] 2015-01-17 01:17:28,724 DEBUG [main] org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(59) | Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
[uaf-guarantee] 2015-01-17 01:17:28,831 DEBUG [main] org.hibernate.ejb.util.NamingHelper.bind(50) | No JNDI name configured for binding Ejb3Configuration
[uaf-guarantee] 2015-01-17 01:17:29,000 DEBUG [main] org.hibernate.cfg.Configuration.buildSessionFactory(1774) | Preparing to build session factory with filters : {}
[uaf-guarantee] 2015-01-17 01:17:29,162 INFO [main] org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(188) | HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
[uaf-guarantee] 2015-01-17 01:17:29,390 DEBUG [main] org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(121) | Database ->
       name : H2
    version : 1.4.180 (2014-07-13)
      major : 1
      minor : 4
[uaf-guarantee] 2015-01-17 01:17:29,391 DEBUG [main] org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(127) | Driver ->
       name : H2 JDBC Driver
    version : 1.4.180 (2014-07-13)
      major : 1
      minor : 4
[uaf-guarantee] 2015-01-17 01:17:29,392 DEBUG [main] org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(133) | JDBC version : 4.0
[uaf-guarantee] 2015-01-17 01:17:29,720 INFO [main] org.hibernate.dialect.Dialect.<init>(130) | HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[uaf-guarantee] 2015-01-17 01:17:30,294 DEBUG [main] org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(3493) | Processing hbm.xml files
[uaf-guarantee] 2015-01-17 01:17:30,294 DEBUG [main] org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(3523) | Process annotated classes
[uaf-guarantee] 2015-01-17 01:17:30,401 DEBUG [main] org.hibernate.cfg.AnnotationBinder.bindClass(532) | Binding entity from annotated class: me.kafeitu.demo.activiti.entity.account.Group
[uaf-guarantee] 2015-01-17 01:17:30,729 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[uaf-guarantee] 2015-01-17 01:17:30,747 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindEntity(394) | Import with entity name Group
[uaf-guarantee] 2015-01-17 01:17:30,754 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindTable(564) | Bind entity me.kafeitu.demo.activiti.entity.account.Group on table act_id_group
[uaf-guarantee] 2015-01-17 01:17:30,935 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_group), mappingColumn=id_, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:30,991 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property id with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,014 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for id
[uaf-guarantee] 2015-01-17 01:17:31,016 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property id
[uaf-guarantee] 2015-01-17 01:17:31,107 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_group), mappingColumn=null, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,286 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_group), mappingColumn=element, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,287 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_group), mappingColumn=act_id_users_key, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,289 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3JoinColumn{logicalColumnName='actIdUsers_KEY', referencedColumn='null', mappedBy='null'}
[uaf-guarantee] 2015-01-17 01:17:31,302 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='actIdGroups'}
[uaf-guarantee] 2015-01-17 01:17:31,302 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='actIdGroups'}
[uaf-guarantee] 2015-01-17 01:17:31,304 DEBUG [main] org.hibernate.cfg.annotations.CollectionBinder.bind(400) | Collection role: me.kafeitu.demo.activiti.entity.account.Group.actIdUsers
[uaf-guarantee] 2015-01-17 01:17:31,309 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property actIdUsers
[uaf-guarantee] 2015-01-17 01:17:31,310 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_group), mappingColumn=name_, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,311 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property name with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,311 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for name
[uaf-guarantee] 2015-01-17 01:17:31,312 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property name
[uaf-guarantee] 2015-01-17 01:17:31,312 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_group), mappingColumn=rev_, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,313 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property rev with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,336 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for rev
[uaf-guarantee] 2015-01-17 01:17:31,336 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property rev
[uaf-guarantee] 2015-01-17 01:17:31,354 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_group), mappingColumn=type_, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,358 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property type with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,359 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for type
[uaf-guarantee] 2015-01-17 01:17:31,382 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property type
[uaf-guarantee] 2015-01-17 01:17:31,473 DEBUG [main] org.hibernate.cfg.AnnotationBinder.bindClass(532) | Binding entity from annotated class: me.kafeitu.demo.activiti.entity.account.User
[uaf-guarantee] 2015-01-17 01:17:31,474 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[uaf-guarantee] 2015-01-17 01:17:31,475 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindEntity(394) | Import with entity name User
[uaf-guarantee] 2015-01-17 01:17:31,475 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindTable(564) | Bind entity me.kafeitu.demo.activiti.entity.account.User on table act_id_user
[uaf-guarantee] 2015-01-17 01:17:31,581 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_user), mappingColumn=id_, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,603 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property id with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,609 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for id
[uaf-guarantee] 2015-01-17 01:17:31,610 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property id
[uaf-guarantee] 2015-01-17 01:17:31,611 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,613 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,614 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_user), mappingColumn=act_id_groups_key, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,614 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3JoinColumn{logicalColumnName='actIdGroups_KEY', referencedColumn='null', mappedBy='null'}
[uaf-guarantee] 2015-01-17 01:17:31,615 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3JoinColumn{logicalColumnName='USER_ID_', referencedColumn='', mappedBy=''}
[uaf-guarantee] 2015-01-17 01:17:31,615 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3JoinColumn{logicalColumnName='GROUP_ID_', referencedColumn='', mappedBy=''}
[uaf-guarantee] 2015-01-17 01:17:31,617 DEBUG [main] org.hibernate.cfg.annotations.CollectionBinder.bind(400) | Collection role: me.kafeitu.demo.activiti.entity.account.User.actIdGroups
[uaf-guarantee] 2015-01-17 01:17:31,617 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property actIdGroups
[uaf-guarantee] 2015-01-17 01:17:31,618 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_user), mappingColumn=email_, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,618 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property email with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,618 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for email
[uaf-guarantee] 2015-01-17 01:17:31,620 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property email
[uaf-guarantee] 2015-01-17 01:17:31,620 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_user), mappingColumn=first_, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,621 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property first with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,621 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for first
[uaf-guarantee] 2015-01-17 01:17:31,621 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property first
[uaf-guarantee] 2015-01-17 01:17:31,622 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_user), mappingColumn=last_, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,622 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property last with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,623 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for last
[uaf-guarantee] 2015-01-17 01:17:31,623 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property last
[uaf-guarantee] 2015-01-17 01:17:31,624 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_user), mappingColumn=pwd_, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,624 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property password with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,624 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for password
[uaf-guarantee] 2015-01-17 01:17:31,625 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property password
[uaf-guarantee] 2015-01-17 01:17:31,625 DEBUG [main] org.hibernate.cfg.AnnotationBinder.bindClass(532) | Binding entity from annotated class: me.kafeitu.demo.activiti.entity.customer.Application
[uaf-guarantee] 2015-01-17 01:17:31,626 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[uaf-guarantee] 2015-01-17 01:17:31,626 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindEntity(394) | Import with entity name Application
[uaf-guarantee] 2015-01-17 01:17:31,626 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindTable(564) | Bind entity me.kafeitu.demo.activiti.entity.customer.Application on table customer_application
[uaf-guarantee] 2015-01-17 01:17:31,681 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_application), mappingColumn=id, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,682 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property id with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,683 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for id
[uaf-guarantee] 2015-01-17 01:17:31,683 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property id
[uaf-guarantee] 2015-01-17 01:17:31,684 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_application), mappingColumn=apply_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,684 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property applyTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,804 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for applyTime
[uaf-guarantee] 2015-01-17 01:17:31,805 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property applyTime
[uaf-guarantee] 2015-01-17 01:17:31,951 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_application), mappingColumn=id_no, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,953 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property idNo with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,953 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for idNo
[uaf-guarantee] 2015-01-17 01:17:31,954 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property idNo
[uaf-guarantee] 2015-01-17 01:17:31,955 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_application), mappingColumn=id_type, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,955 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property idType with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,956 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for idType
[uaf-guarantee] 2015-01-17 01:17:31,957 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property idType
[uaf-guarantee] 2015-01-17 01:17:31,958 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_application), mappingColumn=name, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,959 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property name with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,960 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for name
[uaf-guarantee] 2015-01-17 01:17:31,961 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property name
[uaf-guarantee] 2015-01-17 01:17:31,962 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_application), mappingColumn=process_instance_id, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,963 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property processInstanceId with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,964 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for processInstanceId
[uaf-guarantee] 2015-01-17 01:17:31,964 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property processInstanceId
[uaf-guarantee] 2015-01-17 01:17:31,965 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_application), mappingColumn=reason, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,965 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property reason with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,966 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for reason
[uaf-guarantee] 2015-01-17 01:17:31,966 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property reason
[uaf-guarantee] 2015-01-17 01:17:31,967 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_application), mappingColumn=sex, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,967 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property sex with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,968 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for sex
[uaf-guarantee] 2015-01-17 01:17:31,968 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property sex
[uaf-guarantee] 2015-01-17 01:17:31,969 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_application), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,969 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property userId with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,970 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for userId
[uaf-guarantee] 2015-01-17 01:17:31,970 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property userId
[uaf-guarantee] 2015-01-17 01:17:31,971 DEBUG [main] org.hibernate.cfg.AnnotationBinder.bindClass(532) | Binding entity from annotated class: me.kafeitu.demo.activiti.entity.oa.Leave
[uaf-guarantee] 2015-01-17 01:17:31,972 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[uaf-guarantee] 2015-01-17 01:17:31,972 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindEntity(394) | Import with entity name Leave
[uaf-guarantee] 2015-01-17 01:17:31,973 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindTable(564) | Bind entity me.kafeitu.demo.activiti.entity.oa.Leave on table oa_leave
[uaf-guarantee] 2015-01-17 01:17:31,991 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=id, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,992 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property id with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,993 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for id
[uaf-guarantee] 2015-01-17 01:17:31,993 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property id
[uaf-guarantee] 2015-01-17 01:17:31,994 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=apply_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,995 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property applyTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,997 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for applyTime
[uaf-guarantee] 2015-01-17 01:17:31,998 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property applyTime
[uaf-guarantee] 2015-01-17 01:17:31,998 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=end_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:31,999 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property endTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:31,999 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for endTime
[uaf-guarantee] 2015-01-17 01:17:32,000 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property endTime
[uaf-guarantee] 2015-01-17 01:17:32,000 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=leave_type, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,001 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property leaveType with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,009 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for leaveType
[uaf-guarantee] 2015-01-17 01:17:32,013 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property leaveType
[uaf-guarantee] 2015-01-17 01:17:32,014 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=process_instance_id, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,016 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property processInstanceId with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,017 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for processInstanceId
[uaf-guarantee] 2015-01-17 01:17:32,017 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property processInstanceId
[uaf-guarantee] 2015-01-17 01:17:32,018 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=reality_end_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,019 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property realityEndTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,019 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for realityEndTime
[uaf-guarantee] 2015-01-17 01:17:32,020 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property realityEndTime
[uaf-guarantee] 2015-01-17 01:17:32,021 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=reality_start_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,021 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property realityStartTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,022 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for realityStartTime
[uaf-guarantee] 2015-01-17 01:17:32,022 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property realityStartTime
[uaf-guarantee] 2015-01-17 01:17:32,023 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=reason, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,023 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property reason with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,024 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for reason
[uaf-guarantee] 2015-01-17 01:17:32,025 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property reason
[uaf-guarantee] 2015-01-17 01:17:32,026 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=start_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,026 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property startTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,029 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for startTime
[uaf-guarantee] 2015-01-17 01:17:32,085 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property startTime
[uaf-guarantee] 2015-01-17 01:17:32,128 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,131 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property userId with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,132 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for userId
[uaf-guarantee] 2015-01-17 01:17:32,132 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property userId
[uaf-guarantee] 2015-01-17 01:17:32,133 DEBUG [main] org.hibernate.cfg.AnnotationBinder.bindClass(532) | Binding entity from annotated class: me.kafeitu.demo.activiti.entity.oa.LeaveJpaEntity
[uaf-guarantee] 2015-01-17 01:17:32,146 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[uaf-guarantee] 2015-01-17 01:17:32,147 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindEntity(394) | Import with entity name LEAVE_JPA
[uaf-guarantee] 2015-01-17 01:17:32,154 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindTable(564) | Bind entity me.kafeitu.demo.activiti.entity.oa.LeaveJpaEntity on table leave_jpa
[uaf-guarantee] 2015-01-17 01:17:32,160 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=id, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,161 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property id with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,162 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for id
[uaf-guarantee] 2015-01-17 01:17:32,171 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property id
[uaf-guarantee] 2015-01-17 01:17:32,173 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=apply_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,175 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property applyTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,176 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for applyTime
[uaf-guarantee] 2015-01-17 01:17:32,177 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property applyTime
[uaf-guarantee] 2015-01-17 01:17:32,179 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=dept_leader_approved, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,180 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property deptLeaderApproved with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,181 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for deptLeaderApproved
[uaf-guarantee] 2015-01-17 01:17:32,182 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property deptLeaderApproved
[uaf-guarantee] 2015-01-17 01:17:32,184 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=end_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,185 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property endTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,187 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for endTime
[uaf-guarantee] 2015-01-17 01:17:32,188 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property endTime
[uaf-guarantee] 2015-01-17 01:17:32,189 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=hr_approved, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,190 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property hrApproved with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,193 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for hrApproved
[uaf-guarantee] 2015-01-17 01:17:32,194 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property hrApproved
[uaf-guarantee] 2015-01-17 01:17:32,196 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=leave_type, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,197 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property leaveType with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,198 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for leaveType
[uaf-guarantee] 2015-01-17 01:17:32,199 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property leaveType
[uaf-guarantee] 2015-01-17 01:17:32,201 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=process_instance_id, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,202 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property processInstanceId with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,203 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for processInstanceId
[uaf-guarantee] 2015-01-17 01:17:32,204 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property processInstanceId
[uaf-guarantee] 2015-01-17 01:17:32,205 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=reality_end_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,207 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property realityEndTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,215 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for realityEndTime
[uaf-guarantee] 2015-01-17 01:17:32,216 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property realityEndTime
[uaf-guarantee] 2015-01-17 01:17:32,217 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=reality_start_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,218 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property realityStartTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,218 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for realityStartTime
[uaf-guarantee] 2015-01-17 01:17:32,219 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property realityStartTime
[uaf-guarantee] 2015-01-17 01:17:32,219 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=reason, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,220 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property reason with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,220 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for reason
[uaf-guarantee] 2015-01-17 01:17:32,221 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property reason
[uaf-guarantee] 2015-01-17 01:17:32,221 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=report_back_date, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,222 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property reportBackDate with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,224 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for reportBackDate
[uaf-guarantee] 2015-01-17 01:17:32,225 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property reportBackDate
[uaf-guarantee] 2015-01-17 01:17:32,225 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=start_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,226 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property startTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,226 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for startTime
[uaf-guarantee] 2015-01-17 01:17:32,227 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property startTime
[uaf-guarantee] 2015-01-17 01:17:32,227 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:32,228 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property userId with lazy=false
[uaf-guarantee] 2015-01-17 01:17:32,228 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for userId
[uaf-guarantee] 2015-01-17 01:17:32,232 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property userId
[uaf-guarantee] 2015-01-17 01:17:32,270 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for id
[uaf-guarantee] 2015-01-17 01:17:32,271 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for name
[uaf-guarantee] 2015-01-17 01:17:32,271 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for rev
[uaf-guarantee] 2015-01-17 01:17:32,271 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for type
[uaf-guarantee] 2015-01-17 01:17:32,272 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for id
[uaf-guarantee] 2015-01-17 01:17:32,272 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for email
[uaf-guarantee] 2015-01-17 01:17:32,272 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for first
[uaf-guarantee] 2015-01-17 01:17:32,273 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for last
[uaf-guarantee] 2015-01-17 01:17:32,273 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for password
[uaf-guarantee] 2015-01-17 01:17:32,275 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for id
[uaf-guarantee] 2015-01-17 01:17:32,286 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for applyTime
[uaf-guarantee] 2015-01-17 01:17:32,287 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for idNo
[uaf-guarantee] 2015-01-17 01:17:32,287 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for idType
[uaf-guarantee] 2015-01-17 01:17:32,287 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for name
[uaf-guarantee] 2015-01-17 01:17:32,288 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for processInstanceId
[uaf-guarantee] 2015-01-17 01:17:32,288 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for reason
[uaf-guarantee] 2015-01-17 01:17:32,288 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for sex
[uaf-guarantee] 2015-01-17 01:17:32,289 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for userId
[uaf-guarantee] 2015-01-17 01:17:32,289 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for id
[uaf-guarantee] 2015-01-17 01:17:32,289 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for applyTime
[uaf-guarantee] 2015-01-17 01:17:32,289 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for endTime
[uaf-guarantee] 2015-01-17 01:17:32,290 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for leaveType
[uaf-guarantee] 2015-01-17 01:17:32,290 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for processInstanceId
[uaf-guarantee] 2015-01-17 01:17:32,293 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for realityEndTime
[uaf-guarantee] 2015-01-17 01:17:32,296 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for realityStartTime
[uaf-guarantee] 2015-01-17 01:17:32,297 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for reason
[uaf-guarantee] 2015-01-17 01:17:32,297 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for startTime
[uaf-guarantee] 2015-01-17 01:17:32,298 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for userId
[uaf-guarantee] 2015-01-17 01:17:32,298 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for id
[uaf-guarantee] 2015-01-17 01:17:32,299 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for applyTime
[uaf-guarantee] 2015-01-17 01:17:32,300 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for deptLeaderApproved
[uaf-guarantee] 2015-01-17 01:17:32,300 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for endTime
[uaf-guarantee] 2015-01-17 01:17:32,300 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for hrApproved
[uaf-guarantee] 2015-01-17 01:17:32,301 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for leaveType
[uaf-guarantee] 2015-01-17 01:17:32,301 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for processInstanceId
[uaf-guarantee] 2015-01-17 01:17:32,301 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for realityEndTime
[uaf-guarantee] 2015-01-17 01:17:32,302 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for realityStartTime
[uaf-guarantee] 2015-01-17 01:17:32,303 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for reason
[uaf-guarantee] 2015-01-17 01:17:32,303 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for reportBackDate
[uaf-guarantee] 2015-01-17 01:17:32,304 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for startTime
[uaf-guarantee] 2015-01-17 01:17:32,304 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for userId
[uaf-guarantee] 2015-01-17 01:17:32,305 DEBUG [main] org.hibernate.cfg.Configuration.processFkSecondPassInOrder(1441) | Processing fk mappings (*ToOne and JoinedSubclass)
[uaf-guarantee] 2015-01-17 01:17:32,316 DEBUG [main] org.hibernate.cfg.Configuration.originalSecondPassCompile(1624) | Processing extends queue
[uaf-guarantee] 2015-01-17 01:17:32,316 DEBUG [main] org.hibernate.cfg.Configuration.processExtendsQueue(1682) | Processing extends queue
[uaf-guarantee] 2015-01-17 01:17:32,316 DEBUG [main] org.hibernate.cfg.Configuration.originalSecondPassCompile(1627) | Processing collection mappings
[uaf-guarantee] 2015-01-17 01:17:32,317 DEBUG [main] org.hibernate.cfg.CollectionSecondPass.doSecondPass(66) | Second pass for collection: me.kafeitu.demo.activiti.entity.account.User.actIdGroups
[uaf-guarantee] 2015-01-17 01:17:32,317 DEBUG [main] org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(1051) | Binding as ManyToMany: me.kafeitu.demo.activiti.entity.account.User.actIdGroups
[uaf-guarantee] 2015-01-17 01:17:32,345 DEBUG [main] org.hibernate.cfg.CollectionSecondPass.doSecondPass(83) | Mapped collection key: user_id_, element: group_id_
[uaf-guarantee] 2015-01-17 01:17:32,346 DEBUG [main] org.hibernate.cfg.CollectionSecondPass.doSecondPass(66) | Second pass for collection: me.kafeitu.demo.activiti.entity.account.Group.actIdUsers
[uaf-guarantee] 2015-01-17 01:17:32,361 DEBUG [main] org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(1051) | Binding as ManyToMany: me.kafeitu.demo.activiti.entity.account.Group.actIdUsers
[uaf-guarantee] 2015-01-17 01:17:32,362 DEBUG [main] org.hibernate.cfg.annotations.TableBinder.bindFk(332) | Retrieving property me.kafeitu.demo.activiti.entity.account.User.actIdGroups
[uaf-guarantee] 2015-01-17 01:17:32,364 DEBUG [main] org.hibernate.cfg.CollectionSecondPass.doSecondPass(83) | Mapped collection key: group_id_, element: user_id_
[uaf-guarantee] 2015-01-17 01:17:32,365 DEBUG [main] org.hibernate.cfg.Configuration.originalSecondPassCompile(1637) | Processing native query and ResultSetMapping mappings
[uaf-guarantee] 2015-01-17 01:17:32,366 DEBUG [main] org.hibernate.cfg.Configuration.originalSecondPassCompile(1645) | Processing association property references
[uaf-guarantee] 2015-01-17 01:17:32,367 DEBUG [main] org.hibernate.cfg.Configuration.originalSecondPassCompile(1667) | Creating tables' unique integer identifiers
[uaf-guarantee] 2015-01-17 01:17:32,367 DEBUG [main] org.hibernate.cfg.Configuration.originalSecondPassCompile(1668) | Processing foreign key constraints
[uaf-guarantee] 2015-01-17 01:17:32,368 DEBUG [main] org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(1739) | Resolving reference to class: me.kafeitu.demo.activiti.entity.account.Group
[uaf-guarantee] 2015-01-17 01:17:32,369 DEBUG [main] org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(1739) | Resolving reference to class: me.kafeitu.demo.activiti.entity.account.User
[uaf-guarantee] 2015-01-17 01:17:32,384 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(114) | Automatic flush during beforeCompletion(): disabled
[uaf-guarantee] 2015-01-17 01:17:32,385 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(120) | Automatic session close at end of transaction: disabled
[uaf-guarantee] 2015-01-17 01:17:32,386 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(131) | JDBC batch size: 15
[uaf-guarantee] 2015-01-17 01:17:32,387 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(137) | JDBC batch updates for versioned data: disabled
[uaf-guarantee] 2015-01-17 01:17:32,388 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(147) | Scrollable result sets: enabled
[uaf-guarantee] 2015-01-17 01:17:32,389 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(153) | Wrap result sets: disabled
[uaf-guarantee] 2015-01-17 01:17:32,392 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(159) | JDBC3 getGeneratedKeys(): enabled
[uaf-guarantee] 2015-01-17 01:17:32,394 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(171) | multi-tenancy strategy : NONE
[uaf-guarantee] 2015-01-17 01:17:32,395 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(177) | Connection release mode: auto
[uaf-guarantee] 2015-01-17 01:17:32,396 INFO [main] org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(73) | HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
[uaf-guarantee] 2015-01-17 01:17:32,436 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(199) | Using BatchFetchStyle : LEGACY
[uaf-guarantee] 2015-01-17 01:17:32,437 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(224) | Default batch fetch size: 1
[uaf-guarantee] 2015-01-17 01:17:32,449 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(230) | Generate SQL with comments: disabled
[uaf-guarantee] 2015-01-17 01:17:32,454 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(236) | Order SQL updates by primary key: disabled
[uaf-guarantee] 2015-01-17 01:17:32,455 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(242) | Order SQL inserts for batching: disabled
[uaf-guarantee] 2015-01-17 01:17:32,455 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(250) | Default null ordering: none
[uaf-guarantee] 2015-01-17 01:17:32,459 DEBUG [main] org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(541) | Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[uaf-guarantee] 2015-01-17 01:17:32,502 INFO [main] org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(48) | HHH000397: Using ASTQueryTranslatorFactory
[uaf-guarantee] 2015-01-17 01:17:32,504 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(260) | Query language substitutions: {}
[uaf-guarantee] 2015-01-17 01:17:32,505 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(266) | JPA-QL strict compliance: enabled
[uaf-guarantee] 2015-01-17 01:17:32,507 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(274) | Second-level cache: enabled
[uaf-guarantee] 2015-01-17 01:17:32,509 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(280) | Query cache: disabled
[uaf-guarantee] 2015-01-17 01:17:32,510 DEBUG [main] org.hibernate.cfg.SettingsFactory.createRegionFactory(481) | Cache region factory : org.hibernate.cache.ehcache.EhCacheRegionFactory
[uaf-guarantee] 2015-01-17 01:17:32,574 ERROR [main] org.springframework.test.context.TestContextManager.prepareTestInstance(334) | Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2123baa0] to prepare test instance [me.kafeitu.demo.activiti.dao.InitDataTest@30b16f5f]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:101)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:331)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:213)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:290)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:292)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [applicationContext-test.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:750)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:100)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:250)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:64)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:91)
	... 31 more
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:336)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1612)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1549)
	... 46 more
Caused by: org.hibernate.HibernateException: could not instantiate RegionFactory [org.hibernate.cache.ehcache.EhCacheRegionFactory]
	at org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:501)
	at org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:289)
	at org.hibernate.cfg.Configuration.buildSettingsInternal(Configuration.java:2356)
	at org.hibernate.cfg.Configuration.buildSettings(Configuration.java:2352)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1788)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 52 more
Caused by: org.hibernate.service.classloading.spi.ClassLoadingException: Unable to load class [org.hibernate.cache.ehcache.EhCacheRegionFactory]
	at org.hibernate.service.classloading.internal.ClassLoaderServiceImpl.classForName(ClassLoaderServiceImpl.java:149)
	at org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:484)
	... 58 more
Caused by: java.lang.ClassNotFoundException: Could not load requested class : org.hibernate.cache.ehcache.EhCacheRegionFactory
	at org.hibernate.service.classloading.internal.ClassLoaderServiceImpl$AggregatedClassLoader.findClass(ClassLoaderServiceImpl.java:296)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:249)
	at org.hibernate.service.classloading.internal.ClassLoaderServiceImpl.classForName(ClassLoaderServiceImpl.java:146)
	... 59 more
[uaf-guarantee] 2015-01-17 01:17:32,645 INFO [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316) | Loading XML bean definitions from class path resource [applicationContext-test.xml]
[uaf-guarantee] 2015-01-17 01:17:33,589 INFO [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(513) | Refreshing org.springframework.context.support.GenericApplicationContext@17510d96: startup date [Sat Jan 17 01:17:33 GMT+08:00 2015]; root of context hierarchy
[uaf-guarantee] 2015-01-17 01:17:33,858 INFO [main] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(172) | Loading properties file from class path resource [application.properties]
[uaf-guarantee] 2015-01-17 01:17:33,870 INFO [main] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(172) | Loading properties file from class path resource [application.test.properties]
[uaf-guarantee] 2015-01-17 01:17:33,886 INFO [main] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(172) | Loading properties file from class path resource [application.test.local.properties]
[uaf-guarantee] 2015-01-17 01:17:33,887 WARN [main] org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(181) | Could not load properties from class path resource [application.test.local.properties]: class path resource [application.test.local.properties] cannot be opened because it does not exist
[uaf-guarantee] 2015-01-17 01:17:34,271 INFO [main] org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory.initDatabase(147) | Creating embedded database 'dataSource'
[uaf-guarantee] 2015-01-17 01:17:34,299 INFO [main] org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(431) | Executing SQL script from class path resource [org/activiti/db/create/activiti.h2.create.engine.sql]
[uaf-guarantee] 2015-01-17 01:17:34,711 INFO [main] org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(490) | Executed SQL script from class path resource [org/activiti/db/create/activiti.h2.create.engine.sql] in 412 ms.
[uaf-guarantee] 2015-01-17 01:17:34,712 INFO [main] org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(431) | Executing SQL script from class path resource [org/activiti/db/create/activiti.h2.create.history.sql]
[uaf-guarantee] 2015-01-17 01:17:34,835 INFO [main] org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(490) | Executed SQL script from class path resource [org/activiti/db/create/activiti.h2.create.history.sql] in 123 ms.
[uaf-guarantee] 2015-01-17 01:17:34,837 INFO [main] org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(431) | Executing SQL script from class path resource [org/activiti/db/create/activiti.h2.create.identity.sql]
[uaf-guarantee] 2015-01-17 01:17:34,942 INFO [main] org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(490) | Executed SQL script from class path resource [org/activiti/db/create/activiti.h2.create.identity.sql] in 104 ms.
[uaf-guarantee] 2015-01-17 01:17:34,970 INFO [main] org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(332) | Building JPA container EntityManagerFactory for persistence unit 'default'
[uaf-guarantee] 2015-01-17 01:17:34,971 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration boolean -> org.hibernate.type.BooleanType@15d45d9
[uaf-guarantee] 2015-01-17 01:17:34,971 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration boolean -> org.hibernate.type.BooleanType@15d45d9
[uaf-guarantee] 2015-01-17 01:17:34,972 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@15d45d9
[uaf-guarantee] 2015-01-17 01:17:34,973 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b06433d
[uaf-guarantee] 2015-01-17 01:17:34,973 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration true_false -> org.hibernate.type.TrueFalseType@716136f0
[uaf-guarantee] 2015-01-17 01:17:35,027 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration yes_no -> org.hibernate.type.YesNoType@3e81018b
[uaf-guarantee] 2015-01-17 01:17:35,028 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration byte -> org.hibernate.type.ByteType@4e84f566
[uaf-guarantee] 2015-01-17 01:17:35,028 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration byte -> org.hibernate.type.ByteType@4e84f566
[uaf-guarantee] 2015-01-17 01:17:35,029 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4e84f566
[uaf-guarantee] 2015-01-17 01:17:35,029 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration character -> org.hibernate.type.CharacterType@4ad2efa1
[uaf-guarantee] 2015-01-17 01:17:35,029 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration char -> org.hibernate.type.CharacterType@4ad2efa1
[uaf-guarantee] 2015-01-17 01:17:35,030 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4ad2efa1
[uaf-guarantee] 2015-01-17 01:17:35,030 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration short -> org.hibernate.type.ShortType@1217e615
[uaf-guarantee] 2015-01-17 01:17:35,030 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration short -> org.hibernate.type.ShortType@1217e615
[uaf-guarantee] 2015-01-17 01:17:35,031 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1217e615
[uaf-guarantee] 2015-01-17 01:17:35,032 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration integer -> org.hibernate.type.IntegerType@4b8706f6
[uaf-guarantee] 2015-01-17 01:17:35,032 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration int -> org.hibernate.type.IntegerType@4b8706f6
[uaf-guarantee] 2015-01-17 01:17:35,032 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4b8706f6
[uaf-guarantee] 2015-01-17 01:17:35,033 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration long -> org.hibernate.type.LongType@30cafa1
[uaf-guarantee] 2015-01-17 01:17:35,033 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration long -> org.hibernate.type.LongType@30cafa1
[uaf-guarantee] 2015-01-17 01:17:35,034 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Long -> org.hibernate.type.LongType@30cafa1
[uaf-guarantee] 2015-01-17 01:17:35,034 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration float -> org.hibernate.type.FloatType@16e334a
[uaf-guarantee] 2015-01-17 01:17:35,035 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration float -> org.hibernate.type.FloatType@16e334a
[uaf-guarantee] 2015-01-17 01:17:35,035 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Float -> org.hibernate.type.FloatType@16e334a
[uaf-guarantee] 2015-01-17 01:17:35,035 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration double -> org.hibernate.type.DoubleType@6e75d758
[uaf-guarantee] 2015-01-17 01:17:35,037 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration double -> org.hibernate.type.DoubleType@6e75d758
[uaf-guarantee] 2015-01-17 01:17:35,037 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6e75d758
[uaf-guarantee] 2015-01-17 01:17:35,038 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2778c490
[uaf-guarantee] 2015-01-17 01:17:35,159 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2778c490
[uaf-guarantee] 2015-01-17 01:17:35,164 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3a329572
[uaf-guarantee] 2015-01-17 01:17:35,166 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3a329572
[uaf-guarantee] 2015-01-17 01:17:35,171 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration string -> org.hibernate.type.StringType@11c0b8a0
[uaf-guarantee] 2015-01-17 01:17:35,171 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.String -> org.hibernate.type.StringType@11c0b8a0
[uaf-guarantee] 2015-01-17 01:17:35,174 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration nstring -> org.hibernate.type.StringNVarcharType@10320399
[uaf-guarantee] 2015-01-17 01:17:35,174 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@536b98c3
[uaf-guarantee] 2015-01-17 01:17:35,174 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration url -> org.hibernate.type.UrlType@1344e858
[uaf-guarantee] 2015-01-17 01:17:35,175 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.net.URL -> org.hibernate.type.UrlType@1344e858
[uaf-guarantee] 2015-01-17 01:17:35,175 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration date -> org.hibernate.type.DateType@51f88fbd
[uaf-guarantee] 2015-01-17 01:17:35,175 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.sql.Date -> org.hibernate.type.DateType@51f88fbd
[uaf-guarantee] 2015-01-17 01:17:35,176 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration time -> org.hibernate.type.TimeType@31d1fc02
[uaf-guarantee] 2015-01-17 01:17:35,176 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.sql.Time -> org.hibernate.type.TimeType@31d1fc02
[uaf-guarantee] 2015-01-17 01:17:35,176 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration timestamp -> org.hibernate.type.TimestampType@46b44eb4
[uaf-guarantee] 2015-01-17 01:17:35,177 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@46b44eb4
[uaf-guarantee] 2015-01-17 01:17:35,177 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.Date -> org.hibernate.type.TimestampType@46b44eb4
[uaf-guarantee] 2015-01-17 01:17:35,177 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7d57bf4c
[uaf-guarantee] 2015-01-17 01:17:35,178 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration calendar -> org.hibernate.type.CalendarType@51f1e39b
[uaf-guarantee] 2015-01-17 01:17:35,179 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@51f1e39b
[uaf-guarantee] 2015-01-17 01:17:35,181 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@51f1e39b
[uaf-guarantee] 2015-01-17 01:17:35,188 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@70a1c582
[uaf-guarantee] 2015-01-17 01:17:35,191 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration locale -> org.hibernate.type.LocaleType@6edcb6b4
[uaf-guarantee] 2015-01-17 01:17:35,191 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6edcb6b4
[uaf-guarantee] 2015-01-17 01:17:35,192 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration currency -> org.hibernate.type.CurrencyType@32486cdd
[uaf-guarantee] 2015-01-17 01:17:35,192 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@32486cdd
[uaf-guarantee] 2015-01-17 01:17:35,192 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration timezone -> org.hibernate.type.TimeZoneType@20823c6d
[uaf-guarantee] 2015-01-17 01:17:35,193 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@20823c6d
[uaf-guarantee] 2015-01-17 01:17:35,193 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration class -> org.hibernate.type.ClassType@3979c7cf
[uaf-guarantee] 2015-01-17 01:17:35,193 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3979c7cf
[uaf-guarantee] 2015-01-17 01:17:35,194 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@16ea7549
[uaf-guarantee] 2015-01-17 01:17:35,194 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@16ea7549
[uaf-guarantee] 2015-01-17 01:17:35,194 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f549ceb
[uaf-guarantee] 2015-01-17 01:17:35,241 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@201532fc
[uaf-guarantee] 2015-01-17 01:17:35,247 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration binary -> org.hibernate.type.BinaryType@7a9b777a
[uaf-guarantee] 2015-01-17 01:17:35,248 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration byte[] -> org.hibernate.type.BinaryType@7a9b777a
[uaf-guarantee] 2015-01-17 01:17:35,248 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration [B -> org.hibernate.type.BinaryType@7a9b777a
[uaf-guarantee] 2015-01-17 01:17:35,249 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@66e8c7db
[uaf-guarantee] 2015-01-17 01:17:35,250 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@66e8c7db
[uaf-guarantee] 2015-01-17 01:17:35,250 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@66e8c7db
[uaf-guarantee] 2015-01-17 01:17:35,251 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration image -> org.hibernate.type.ImageType@6ce7ce4c
[uaf-guarantee] 2015-01-17 01:17:35,251 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration characters -> org.hibernate.type.CharArrayType@59b70f9e
[uaf-guarantee] 2015-01-17 01:17:35,252 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration char[] -> org.hibernate.type.CharArrayType@59b70f9e
[uaf-guarantee] 2015-01-17 01:17:35,252 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration [C -> org.hibernate.type.CharArrayType@59b70f9e
[uaf-guarantee] 2015-01-17 01:17:35,284 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@38666d83
[uaf-guarantee] 2015-01-17 01:17:35,349 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@38666d83
[uaf-guarantee] 2015-01-17 01:17:35,350 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@38666d83
[uaf-guarantee] 2015-01-17 01:17:35,350 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration text -> org.hibernate.type.TextType@33a998c7
[uaf-guarantee] 2015-01-17 01:17:35,350 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration ntext -> org.hibernate.type.NTextType@3ab28980
[uaf-guarantee] 2015-01-17 01:17:35,352 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration blob -> org.hibernate.type.BlobType@114562c5
[uaf-guarantee] 2015-01-17 01:17:35,352 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@114562c5
[uaf-guarantee] 2015-01-17 01:17:35,353 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5da631c2
[uaf-guarantee] 2015-01-17 01:17:35,353 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration clob -> org.hibernate.type.ClobType@1bae939f
[uaf-guarantee] 2015-01-17 01:17:35,354 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1bae939f
[uaf-guarantee] 2015-01-17 01:17:35,354 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration nclob -> org.hibernate.type.NClobType@4095c5ec
[uaf-guarantee] 2015-01-17 01:17:35,355 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4095c5ec
[uaf-guarantee] 2015-01-17 01:17:35,355 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@779d9c0d
[uaf-guarantee] 2015-01-17 01:17:35,389 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2354c054
[uaf-guarantee] 2015-01-17 01:17:35,396 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration serializable -> org.hibernate.type.SerializableType@7acdba53
[uaf-guarantee] 2015-01-17 01:17:35,396 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration object -> org.hibernate.type.ObjectType@565539d8
[uaf-guarantee] 2015-01-17 01:17:35,397 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@565539d8
[uaf-guarantee] 2015-01-17 01:17:35,397 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@738bf6bf
[uaf-guarantee] 2015-01-17 01:17:35,398 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@69f4b0dc
[uaf-guarantee] 2015-01-17 01:17:35,398 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3f8771dc
[uaf-guarantee] 2015-01-17 01:17:35,398 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@55444319
[uaf-guarantee] 2015-01-17 01:17:35,399 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@74914a0a
[uaf-guarantee] 2015-01-17 01:17:35,430 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6e94124f
[uaf-guarantee] 2015-01-17 01:17:35,438 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3b3e3940
[uaf-guarantee] 2015-01-17 01:17:35,441 DEBUG [main] org.hibernate.type.BasicTypeRegistry.register(148) | Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7220b722
[uaf-guarantee] 2015-01-17 01:17:35,441 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[uaf-guarantee] 2015-01-17 01:17:35,442 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[uaf-guarantee] 2015-01-17 01:17:35,442 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[uaf-guarantee] 2015-01-17 01:17:35,443 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[uaf-guarantee] 2015-01-17 01:17:35,443 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
[uaf-guarantee] 2015-01-17 01:17:35,445 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[uaf-guarantee] 2015-01-17 01:17:35,445 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[uaf-guarantee] 2015-01-17 01:17:35,446 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[uaf-guarantee] 2015-01-17 01:17:35,446 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
[uaf-guarantee] 2015-01-17 01:17:35,447 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[uaf-guarantee] 2015-01-17 01:17:35,447 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[uaf-guarantee] 2015-01-17 01:17:35,447 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[uaf-guarantee] 2015-01-17 01:17:35,448 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[uaf-guarantee] 2015-01-17 01:17:35,448 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[uaf-guarantee] 2015-01-17 01:17:35,448 DEBUG [main] org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(93) | Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[uaf-guarantee] 2015-01-17 01:17:35,449 DEBUG [main] org.hibernate.ejb.Ejb3Configuration.configure(528) | Processing PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@1feed786
	Temporary classloader: org.springframework.instrument.classloading.SimpleThrowawayClassLoader@41d753b7
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.SimpleDriverDataSource@1fb93526
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/apple/Documents/workspace/guarantee/guarantee/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		me.kafeitu.demo.activiti.entity.account.Group
		me.kafeitu.demo.activiti.entity.account.User
		me.kafeitu.demo.activiti.entity.customer.Application
		me.kafeitu.demo.activiti.entity.IdEntity
		me.kafeitu.demo.activiti.entity.oa.Leave
		me.kafeitu.demo.activiti.entity.oa.LeaveJpaEntity]
	Mapping files names []
	Properties []
[uaf-guarantee] 2015-01-17 01:17:35,449 DEBUG [main] org.hibernate.ejb.Ejb3Configuration.setDetectedArtifactsOnScanningContext(851) | Detect class: true; detect hbm: true
[uaf-guarantee] 2015-01-17 01:17:35,450 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.unqualify(126) | Searching mapped entities in jar/par: file:/Users/apple/Documents/workspace/guarantee/guarantee/target/test-classes/
[uaf-guarantee] 2015-01-17 01:17:35,462 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.dao.InitDataTest
[uaf-guarantee] 2015-01-17 01:17:35,466 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.dao.JpaMappingTest
[uaf-guarantee] 2015-01-17 01:17:35,467 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.dao.LeaveDaoTest
[uaf-guarantee] 2015-01-17 01:17:35,469 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.engine.ProcessEngineTest
[uaf-guarantee] 2015-01-17 01:17:35,470 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.process.ProcessTestDispatch
[uaf-guarantee] 2015-01-17 01:17:35,473 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.service.AbstractTest
[uaf-guarantee] 2015-01-17 01:17:35,474 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.service.oa.leave.LeaveManagerTest
[uaf-guarantee] 2015-01-17 01:17:35,476 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.service.oa.leave.LeaveWebserviceInWorkflowTest
[uaf-guarantee] 2015-01-17 01:17:35,498 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.service.oa.leave.LeaveWorkflowServiceTest
[uaf-guarantee] 2015-01-17 01:17:35,500 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.web.oa.LeaveControllerTest
[uaf-guarantee] 2015-01-17 01:17:35,501 DEBUG [main] org.hibernate.ejb.packaging.AbstractJarVisitor.addElement(172) | Filtering: me.kafeitu.demo.activiti.web.user.UserControllerTest
[uaf-guarantee] 2015-01-17 01:17:35,503 DEBUG [main] org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(59) | Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[uaf-guarantee] 2015-01-17 01:17:35,503 DEBUG [main] org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(59) | Adding Integrator [org.hibernate.ejb.event.JpaIntegrator].
[uaf-guarantee] 2015-01-17 01:17:35,504 DEBUG [main] org.hibernate.ejb.util.NamingHelper.bind(50) | No JNDI name configured for binding Ejb3Configuration
[uaf-guarantee] 2015-01-17 01:17:35,505 DEBUG [main] org.hibernate.cfg.Configuration.buildSessionFactory(1774) | Preparing to build session factory with filters : {}
[uaf-guarantee] 2015-01-17 01:17:35,505 INFO [main] org.hibernate.service.jdbc.connections.internal.ConnectionProviderInitiator.instantiateExplicitConnectionProvider(188) | HHH000130: Instantiating explicit connection provider: org.hibernate.ejb.connection.InjectedDataSourceConnectionProvider
[uaf-guarantee] 2015-01-17 01:17:35,543 DEBUG [main] org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(121) | Database ->
       name : H2
    version : 1.4.180 (2014-07-13)
      major : 1
      minor : 4
[uaf-guarantee] 2015-01-17 01:17:35,543 DEBUG [main] org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(127) | Driver ->
       name : H2 JDBC Driver
    version : 1.4.180 (2014-07-13)
      major : 1
      minor : 4
[uaf-guarantee] 2015-01-17 01:17:35,544 DEBUG [main] org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(133) | JDBC version : 4.0
[uaf-guarantee] 2015-01-17 01:17:35,551 INFO [main] org.hibernate.dialect.Dialect.<init>(130) | HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[uaf-guarantee] 2015-01-17 01:17:35,553 DEBUG [main] org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(3493) | Processing hbm.xml files
[uaf-guarantee] 2015-01-17 01:17:35,554 DEBUG [main] org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(3523) | Process annotated classes
[uaf-guarantee] 2015-01-17 01:17:35,554 DEBUG [main] org.hibernate.cfg.AnnotationBinder.bindClass(532) | Binding entity from annotated class: me.kafeitu.demo.activiti.entity.account.Group
[uaf-guarantee] 2015-01-17 01:17:35,555 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[uaf-guarantee] 2015-01-17 01:17:35,555 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindEntity(394) | Import with entity name Group
[uaf-guarantee] 2015-01-17 01:17:35,556 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindTable(564) | Bind entity me.kafeitu.demo.activiti.entity.account.Group on table act_id_group
[uaf-guarantee] 2015-01-17 01:17:35,560 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_group), mappingColumn=id_, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,561 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property id with lazy=false
[uaf-guarantee] 2015-01-17 01:17:35,603 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for id
[uaf-guarantee] 2015-01-17 01:17:35,603 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property id
[uaf-guarantee] 2015-01-17 01:17:35,604 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_group), mappingColumn=null, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,604 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_group), mappingColumn=element, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,605 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_group), mappingColumn=act_id_users_key, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,605 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3JoinColumn{logicalColumnName='actIdUsers_KEY', referencedColumn='null', mappedBy='null'}
[uaf-guarantee] 2015-01-17 01:17:35,606 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='actIdGroups'}
[uaf-guarantee] 2015-01-17 01:17:35,606 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='actIdGroups'}
[uaf-guarantee] 2015-01-17 01:17:35,607 DEBUG [main] org.hibernate.cfg.annotations.CollectionBinder.bind(400) | Collection role: me.kafeitu.demo.activiti.entity.account.Group.actIdUsers
[uaf-guarantee] 2015-01-17 01:17:35,607 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property actIdUsers
[uaf-guarantee] 2015-01-17 01:17:35,607 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_group), mappingColumn=name_, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,608 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property name with lazy=false
[uaf-guarantee] 2015-01-17 01:17:35,648 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for name
[uaf-guarantee] 2015-01-17 01:17:35,721 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property name
[uaf-guarantee] 2015-01-17 01:17:35,740 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_group), mappingColumn=rev_, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,741 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property rev with lazy=false
[uaf-guarantee] 2015-01-17 01:17:35,741 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for rev
[uaf-guarantee] 2015-01-17 01:17:35,742 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property rev
[uaf-guarantee] 2015-01-17 01:17:35,743 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_group), mappingColumn=type_, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,743 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property type with lazy=false
[uaf-guarantee] 2015-01-17 01:17:35,744 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for type
[uaf-guarantee] 2015-01-17 01:17:35,761 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property type
[uaf-guarantee] 2015-01-17 01:17:35,762 DEBUG [main] org.hibernate.cfg.AnnotationBinder.bindClass(532) | Binding entity from annotated class: me.kafeitu.demo.activiti.entity.account.User
[uaf-guarantee] 2015-01-17 01:17:35,763 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[uaf-guarantee] 2015-01-17 01:17:35,764 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindEntity(394) | Import with entity name User
[uaf-guarantee] 2015-01-17 01:17:35,764 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindTable(564) | Bind entity me.kafeitu.demo.activiti.entity.account.User on table act_id_user
[uaf-guarantee] 2015-01-17 01:17:35,768 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_user), mappingColumn=id_, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,769 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property id with lazy=false
[uaf-guarantee] 2015-01-17 01:17:35,837 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for id
[uaf-guarantee] 2015-01-17 01:17:35,838 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property id
[uaf-guarantee] 2015-01-17 01:17:35,838 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,839 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,839 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_user), mappingColumn=act_id_groups_key, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,840 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3JoinColumn{logicalColumnName='actIdGroups_KEY', referencedColumn='null', mappedBy='null'}
[uaf-guarantee] 2015-01-17 01:17:35,840 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3JoinColumn{logicalColumnName='USER_ID_', referencedColumn='', mappedBy=''}
[uaf-guarantee] 2015-01-17 01:17:35,841 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3JoinColumn{logicalColumnName='GROUP_ID_', referencedColumn='', mappedBy=''}
[uaf-guarantee] 2015-01-17 01:17:35,842 DEBUG [main] org.hibernate.cfg.annotations.CollectionBinder.bind(400) | Collection role: me.kafeitu.demo.activiti.entity.account.User.actIdGroups
[uaf-guarantee] 2015-01-17 01:17:35,842 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property actIdGroups
[uaf-guarantee] 2015-01-17 01:17:35,843 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_user), mappingColumn=email_, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,844 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property email with lazy=false
[uaf-guarantee] 2015-01-17 01:17:35,845 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for email
[uaf-guarantee] 2015-01-17 01:17:35,846 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property email
[uaf-guarantee] 2015-01-17 01:17:35,847 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_user), mappingColumn=first_, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,847 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property first with lazy=false
[uaf-guarantee] 2015-01-17 01:17:35,847 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for first
[uaf-guarantee] 2015-01-17 01:17:35,848 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property first
[uaf-guarantee] 2015-01-17 01:17:35,848 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_user), mappingColumn=last_, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,908 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property last with lazy=false
[uaf-guarantee] 2015-01-17 01:17:35,910 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for last
[uaf-guarantee] 2015-01-17 01:17:35,911 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property last
[uaf-guarantee] 2015-01-17 01:17:35,911 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(act_id_user), mappingColumn=pwd_, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,912 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property password with lazy=false
[uaf-guarantee] 2015-01-17 01:17:35,913 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for password
[uaf-guarantee] 2015-01-17 01:17:35,913 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property password
[uaf-guarantee] 2015-01-17 01:17:35,914 DEBUG [main] org.hibernate.cfg.AnnotationBinder.bindClass(532) | Binding entity from annotated class: me.kafeitu.demo.activiti.entity.customer.Application
[uaf-guarantee] 2015-01-17 01:17:35,915 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[uaf-guarantee] 2015-01-17 01:17:35,915 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindEntity(394) | Import with entity name Application
[uaf-guarantee] 2015-01-17 01:17:35,916 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindTable(564) | Bind entity me.kafeitu.demo.activiti.entity.customer.Application on table customer_application
[uaf-guarantee] 2015-01-17 01:17:35,920 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_application), mappingColumn=id, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,920 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property id with lazy=false
[uaf-guarantee] 2015-01-17 01:17:35,927 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for id
[uaf-guarantee] 2015-01-17 01:17:35,928 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property id
[uaf-guarantee] 2015-01-17 01:17:35,929 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_application), mappingColumn=apply_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,929 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property applyTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:35,930 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for applyTime
[uaf-guarantee] 2015-01-17 01:17:35,930 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property applyTime
[uaf-guarantee] 2015-01-17 01:17:35,931 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_application), mappingColumn=id_no, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,932 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property idNo with lazy=false
[uaf-guarantee] 2015-01-17 01:17:35,932 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for idNo
[uaf-guarantee] 2015-01-17 01:17:35,933 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property idNo
[uaf-guarantee] 2015-01-17 01:17:35,933 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_application), mappingColumn=id_type, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,934 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property idType with lazy=false
[uaf-guarantee] 2015-01-17 01:17:35,934 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for idType
[uaf-guarantee] 2015-01-17 01:17:35,934 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property idType
[uaf-guarantee] 2015-01-17 01:17:35,935 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_application), mappingColumn=name, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,935 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property name with lazy=false
[uaf-guarantee] 2015-01-17 01:17:35,936 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for name
[uaf-guarantee] 2015-01-17 01:17:35,936 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property name
[uaf-guarantee] 2015-01-17 01:17:35,937 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_application), mappingColumn=process_instance_id, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,940 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property processInstanceId with lazy=false
[uaf-guarantee] 2015-01-17 01:17:35,940 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for processInstanceId
[uaf-guarantee] 2015-01-17 01:17:35,943 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property processInstanceId
[uaf-guarantee] 2015-01-17 01:17:35,943 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_application), mappingColumn=reason, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,945 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property reason with lazy=false
[uaf-guarantee] 2015-01-17 01:17:35,953 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for reason
[uaf-guarantee] 2015-01-17 01:17:35,957 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property reason
[uaf-guarantee] 2015-01-17 01:17:35,958 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_application), mappingColumn=sex, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,959 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property sex with lazy=false
[uaf-guarantee] 2015-01-17 01:17:35,960 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for sex
[uaf-guarantee] 2015-01-17 01:17:35,960 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property sex
[uaf-guarantee] 2015-01-17 01:17:35,961 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(customer_application), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:35,961 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property userId with lazy=false
[uaf-guarantee] 2015-01-17 01:17:35,962 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for userId
[uaf-guarantee] 2015-01-17 01:17:36,029 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property userId
[uaf-guarantee] 2015-01-17 01:17:36,030 DEBUG [main] org.hibernate.cfg.AnnotationBinder.bindClass(532) | Binding entity from annotated class: me.kafeitu.demo.activiti.entity.oa.Leave
[uaf-guarantee] 2015-01-17 01:17:36,030 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[uaf-guarantee] 2015-01-17 01:17:36,037 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindEntity(394) | Import with entity name Leave
[uaf-guarantee] 2015-01-17 01:17:36,038 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindTable(564) | Bind entity me.kafeitu.demo.activiti.entity.oa.Leave on table oa_leave
[uaf-guarantee] 2015-01-17 01:17:36,055 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=id, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,057 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property id with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,059 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for id
[uaf-guarantee] 2015-01-17 01:17:36,059 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property id
[uaf-guarantee] 2015-01-17 01:17:36,060 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=apply_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,060 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property applyTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,060 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for applyTime
[uaf-guarantee] 2015-01-17 01:17:36,061 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property applyTime
[uaf-guarantee] 2015-01-17 01:17:36,061 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=end_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,062 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property endTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,062 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for endTime
[uaf-guarantee] 2015-01-17 01:17:36,062 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property endTime
[uaf-guarantee] 2015-01-17 01:17:36,063 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=leave_type, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,063 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property leaveType with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,078 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for leaveType
[uaf-guarantee] 2015-01-17 01:17:36,079 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property leaveType
[uaf-guarantee] 2015-01-17 01:17:36,079 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=process_instance_id, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,080 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property processInstanceId with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,080 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for processInstanceId
[uaf-guarantee] 2015-01-17 01:17:36,080 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property processInstanceId
[uaf-guarantee] 2015-01-17 01:17:36,081 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=reality_end_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,081 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property realityEndTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,082 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for realityEndTime
[uaf-guarantee] 2015-01-17 01:17:36,082 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property realityEndTime
[uaf-guarantee] 2015-01-17 01:17:36,083 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=reality_start_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,083 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property realityStartTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,083 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for realityStartTime
[uaf-guarantee] 2015-01-17 01:17:36,084 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property realityStartTime
[uaf-guarantee] 2015-01-17 01:17:36,084 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=reason, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,085 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property reason with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,085 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for reason
[uaf-guarantee] 2015-01-17 01:17:36,086 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property reason
[uaf-guarantee] 2015-01-17 01:17:36,086 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=start_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,087 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property startTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,087 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for startTime
[uaf-guarantee] 2015-01-17 01:17:36,087 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property startTime
[uaf-guarantee] 2015-01-17 01:17:36,089 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(oa_leave), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,090 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property userId with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,090 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for userId
[uaf-guarantee] 2015-01-17 01:17:36,092 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property userId
[uaf-guarantee] 2015-01-17 01:17:36,092 DEBUG [main] org.hibernate.cfg.AnnotationBinder.bindClass(532) | Binding entity from annotated class: me.kafeitu.demo.activiti.entity.oa.LeaveJpaEntity
[uaf-guarantee] 2015-01-17 01:17:36,094 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[uaf-guarantee] 2015-01-17 01:17:36,094 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindEntity(394) | Import with entity name LEAVE_JPA
[uaf-guarantee] 2015-01-17 01:17:36,095 DEBUG [main] org.hibernate.cfg.annotations.EntityBinder.bindTable(564) | Bind entity me.kafeitu.demo.activiti.entity.oa.LeaveJpaEntity on table leave_jpa
[uaf-guarantee] 2015-01-17 01:17:36,099 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=id, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,099 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property id with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,100 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for id
[uaf-guarantee] 2015-01-17 01:17:36,100 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property id
[uaf-guarantee] 2015-01-17 01:17:36,101 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=apply_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,101 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property applyTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,110 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for applyTime
[uaf-guarantee] 2015-01-17 01:17:36,111 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property applyTime
[uaf-guarantee] 2015-01-17 01:17:36,111 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=dept_leader_approved, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,163 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property deptLeaderApproved with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,164 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for deptLeaderApproved
[uaf-guarantee] 2015-01-17 01:17:36,165 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property deptLeaderApproved
[uaf-guarantee] 2015-01-17 01:17:36,165 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=end_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,166 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property endTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,166 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for endTime
[uaf-guarantee] 2015-01-17 01:17:36,166 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property endTime
[uaf-guarantee] 2015-01-17 01:17:36,167 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=hr_approved, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,167 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property hrApproved with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,167 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for hrApproved
[uaf-guarantee] 2015-01-17 01:17:36,168 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property hrApproved
[uaf-guarantee] 2015-01-17 01:17:36,168 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=leave_type, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,169 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property leaveType with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,169 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for leaveType
[uaf-guarantee] 2015-01-17 01:17:36,170 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property leaveType
[uaf-guarantee] 2015-01-17 01:17:36,171 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=process_instance_id, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,171 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property processInstanceId with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,172 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for processInstanceId
[uaf-guarantee] 2015-01-17 01:17:36,184 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property processInstanceId
[uaf-guarantee] 2015-01-17 01:17:36,184 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=reality_end_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,185 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property realityEndTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,185 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for realityEndTime
[uaf-guarantee] 2015-01-17 01:17:36,185 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property realityEndTime
[uaf-guarantee] 2015-01-17 01:17:36,186 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=reality_start_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,186 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property realityStartTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,186 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for realityStartTime
[uaf-guarantee] 2015-01-17 01:17:36,191 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property realityStartTime
[uaf-guarantee] 2015-01-17 01:17:36,193 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=reason, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,193 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property reason with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,194 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for reason
[uaf-guarantee] 2015-01-17 01:17:36,194 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property reason
[uaf-guarantee] 2015-01-17 01:17:36,195 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=report_back_date, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,195 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property reportBackDate with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,195 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for reportBackDate
[uaf-guarantee] 2015-01-17 01:17:36,196 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property reportBackDate
[uaf-guarantee] 2015-01-17 01:17:36,196 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=start_time, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,197 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property startTime with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,197 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for startTime
[uaf-guarantee] 2015-01-17 01:17:36,198 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property startTime
[uaf-guarantee] 2015-01-17 01:17:36,204 DEBUG [main] org.hibernate.cfg.Ejb3Column.bind(196) | Binding column: Ejb3Column{table=org.hibernate.mapping.Table(leave_jpa), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[uaf-guarantee] 2015-01-17 01:17:36,205 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(179) | MetadataSourceProcessor property userId with lazy=false
[uaf-guarantee] 2015-01-17 01:17:36,205 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.make(331) | building SimpleValue for userId
[uaf-guarantee] 2015-01-17 01:17:36,206 DEBUG [main] org.hibernate.cfg.annotations.PropertyBinder.makeProperty(260) | Building property userId
[uaf-guarantee] 2015-01-17 01:17:36,206 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for id
[uaf-guarantee] 2015-01-17 01:17:36,206 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for name
[uaf-guarantee] 2015-01-17 01:17:36,207 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for rev
[uaf-guarantee] 2015-01-17 01:17:36,207 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for type
[uaf-guarantee] 2015-01-17 01:17:36,207 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for id
[uaf-guarantee] 2015-01-17 01:17:36,209 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for email
[uaf-guarantee] 2015-01-17 01:17:36,209 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for first
[uaf-guarantee] 2015-01-17 01:17:36,209 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for last
[uaf-guarantee] 2015-01-17 01:17:36,210 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for password
[uaf-guarantee] 2015-01-17 01:17:36,210 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for id
[uaf-guarantee] 2015-01-17 01:17:36,210 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for applyTime
[uaf-guarantee] 2015-01-17 01:17:36,211 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for idNo
[uaf-guarantee] 2015-01-17 01:17:36,211 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for idType
[uaf-guarantee] 2015-01-17 01:17:36,211 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for name
[uaf-guarantee] 2015-01-17 01:17:36,211 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for processInstanceId
[uaf-guarantee] 2015-01-17 01:17:36,212 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for reason
[uaf-guarantee] 2015-01-17 01:17:36,212 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for sex
[uaf-guarantee] 2015-01-17 01:17:36,212 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for userId
[uaf-guarantee] 2015-01-17 01:17:36,213 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for id
[uaf-guarantee] 2015-01-17 01:17:36,213 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for applyTime
[uaf-guarantee] 2015-01-17 01:17:36,213 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for endTime
[uaf-guarantee] 2015-01-17 01:17:36,213 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for leaveType
[uaf-guarantee] 2015-01-17 01:17:36,214 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for processInstanceId
[uaf-guarantee] 2015-01-17 01:17:36,214 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for realityEndTime
[uaf-guarantee] 2015-01-17 01:17:36,214 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for realityStartTime
[uaf-guarantee] 2015-01-17 01:17:36,215 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for reason
[uaf-guarantee] 2015-01-17 01:17:36,218 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for startTime
[uaf-guarantee] 2015-01-17 01:17:36,219 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for userId
[uaf-guarantee] 2015-01-17 01:17:36,219 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for id
[uaf-guarantee] 2015-01-17 01:17:36,219 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for applyTime
[uaf-guarantee] 2015-01-17 01:17:36,220 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for deptLeaderApproved
[uaf-guarantee] 2015-01-17 01:17:36,220 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for endTime
[uaf-guarantee] 2015-01-17 01:17:36,220 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for hrApproved
[uaf-guarantee] 2015-01-17 01:17:36,221 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for leaveType
[uaf-guarantee] 2015-01-17 01:17:36,221 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for processInstanceId
[uaf-guarantee] 2015-01-17 01:17:36,221 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for realityEndTime
[uaf-guarantee] 2015-01-17 01:17:36,221 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for realityStartTime
[uaf-guarantee] 2015-01-17 01:17:36,222 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for reason
[uaf-guarantee] 2015-01-17 01:17:36,222 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for reportBackDate
[uaf-guarantee] 2015-01-17 01:17:36,222 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for startTime
[uaf-guarantee] 2015-01-17 01:17:36,223 DEBUG [main] org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(369) | Setting SimpleValue typeName for userId
[uaf-guarantee] 2015-01-17 01:17:36,223 DEBUG [main] org.hibernate.cfg.Configuration.processFkSecondPassInOrder(1441) | Processing fk mappings (*ToOne and JoinedSubclass)
[uaf-guarantee] 2015-01-17 01:17:36,223 DEBUG [main] org.hibernate.cfg.Configuration.originalSecondPassCompile(1624) | Processing extends queue
[uaf-guarantee] 2015-01-17 01:17:36,223 DEBUG [main] org.hibernate.cfg.Configuration.processExtendsQueue(1682) | Processing extends queue
[uaf-guarantee] 2015-01-17 01:17:36,225 DEBUG [main] org.hibernate.cfg.Configuration.originalSecondPassCompile(1627) | Processing collection mappings
[uaf-guarantee] 2015-01-17 01:17:36,225 DEBUG [main] org.hibernate.cfg.CollectionSecondPass.doSecondPass(66) | Second pass for collection: me.kafeitu.demo.activiti.entity.account.User.actIdGroups
[uaf-guarantee] 2015-01-17 01:17:36,226 DEBUG [main] org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(1051) | Binding as ManyToMany: me.kafeitu.demo.activiti.entity.account.User.actIdGroups
[uaf-guarantee] 2015-01-17 01:17:36,227 DEBUG [main] org.hibernate.cfg.CollectionSecondPass.doSecondPass(83) | Mapped collection key: user_id_, element: group_id_
[uaf-guarantee] 2015-01-17 01:17:36,227 DEBUG [main] org.hibernate.cfg.CollectionSecondPass.doSecondPass(66) | Second pass for collection: me.kafeitu.demo.activiti.entity.account.Group.actIdUsers
[uaf-guarantee] 2015-01-17 01:17:36,227 DEBUG [main] org.hibernate.cfg.annotations.CollectionBinder.bindManyToManySecondPass(1051) | Binding as ManyToMany: me.kafeitu.demo.activiti.entity.account.Group.actIdUsers
[uaf-guarantee] 2015-01-17 01:17:36,229 DEBUG [main] org.hibernate.cfg.annotations.TableBinder.bindFk(332) | Retrieving property me.kafeitu.demo.activiti.entity.account.User.actIdGroups
[uaf-guarantee] 2015-01-17 01:17:36,229 DEBUG [main] org.hibernate.cfg.CollectionSecondPass.doSecondPass(83) | Mapped collection key: group_id_, element: user_id_
[uaf-guarantee] 2015-01-17 01:17:36,229 DEBUG [main] org.hibernate.cfg.Configuration.originalSecondPassCompile(1637) | Processing native query and ResultSetMapping mappings
[uaf-guarantee] 2015-01-17 01:17:36,230 DEBUG [main] org.hibernate.cfg.Configuration.originalSecondPassCompile(1645) | Processing association property references
[uaf-guarantee] 2015-01-17 01:17:36,230 DEBUG [main] org.hibernate.cfg.Configuration.originalSecondPassCompile(1667) | Creating tables' unique integer identifiers
[uaf-guarantee] 2015-01-17 01:17:36,232 DEBUG [main] org.hibernate.cfg.Configuration.originalSecondPassCompile(1668) | Processing foreign key constraints
[uaf-guarantee] 2015-01-17 01:17:36,232 DEBUG [main] org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(1739) | Resolving reference to class: me.kafeitu.demo.activiti.entity.account.Group
[uaf-guarantee] 2015-01-17 01:17:36,232 DEBUG [main] org.hibernate.cfg.Configuration.secondPassCompileForeignKeys(1739) | Resolving reference to class: me.kafeitu.demo.activiti.entity.account.User
[uaf-guarantee] 2015-01-17 01:17:36,234 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(114) | Automatic flush during beforeCompletion(): disabled
[uaf-guarantee] 2015-01-17 01:17:36,234 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(120) | Automatic session close at end of transaction: disabled
[uaf-guarantee] 2015-01-17 01:17:36,235 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(131) | JDBC batch size: 15
[uaf-guarantee] 2015-01-17 01:17:36,235 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(137) | JDBC batch updates for versioned data: disabled
[uaf-guarantee] 2015-01-17 01:17:36,235 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(147) | Scrollable result sets: enabled
[uaf-guarantee] 2015-01-17 01:17:36,235 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(153) | Wrap result sets: disabled
[uaf-guarantee] 2015-01-17 01:17:36,236 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(159) | JDBC3 getGeneratedKeys(): enabled
[uaf-guarantee] 2015-01-17 01:17:36,236 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(171) | multi-tenancy strategy : NONE
[uaf-guarantee] 2015-01-17 01:17:36,236 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(177) | Connection release mode: auto
[uaf-guarantee] 2015-01-17 01:17:36,236 INFO [main] org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(73) | HHH000268: Transaction strategy: org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory
[uaf-guarantee] 2015-01-17 01:17:36,237 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(199) | Using BatchFetchStyle : LEGACY
[uaf-guarantee] 2015-01-17 01:17:36,237 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(224) | Default batch fetch size: 1
[uaf-guarantee] 2015-01-17 01:17:36,238 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(230) | Generate SQL with comments: disabled
[uaf-guarantee] 2015-01-17 01:17:36,238 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(236) | Order SQL updates by primary key: disabled
[uaf-guarantee] 2015-01-17 01:17:36,238 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(242) | Order SQL inserts for batching: disabled
[uaf-guarantee] 2015-01-17 01:17:36,238 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(250) | Default null ordering: none
[uaf-guarantee] 2015-01-17 01:17:36,239 DEBUG [main] org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(541) | Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
[uaf-guarantee] 2015-01-17 01:17:36,246 INFO [main] org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(48) | HHH000397: Using ASTQueryTranslatorFactory
[uaf-guarantee] 2015-01-17 01:17:36,246 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(260) | Query language substitutions: {}
[uaf-guarantee] 2015-01-17 01:17:36,247 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(266) | JPA-QL strict compliance: enabled
[uaf-guarantee] 2015-01-17 01:17:36,247 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(274) | Second-level cache: enabled
[uaf-guarantee] 2015-01-17 01:17:36,247 DEBUG [main] org.hibernate.cfg.SettingsFactory.buildSettings(280) | Query cache: disabled
[uaf-guarantee] 2015-01-17 01:17:36,247 DEBUG [main] org.hibernate.cfg.SettingsFactory.createRegionFactory(481) | Cache region factory : org.hibernate.cache.ehcache.EhCacheRegionFactory
[uaf-guarantee] 2015-01-17 01:17:36,263 ERROR [main] org.springframework.test.context.TestContextManager.prepareTestInstance(334) | Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@79a86488] to prepare test instance [me.kafeitu.demo.activiti.dao.JpaMappingTest@1e605b1e]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:101)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:331)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:213)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:290)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:292)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [applicationContext-test.xml]: Invocation of init method failed; nested exception is javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1553)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:539)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:298)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:973)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:750)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:100)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:250)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:64)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:91)
	... 31 more
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: default] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:924)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:899)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:76)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:336)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1612)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1549)
	... 46 more
Caused by: org.hibernate.HibernateException: could not instantiate RegionFactory [org.hibernate.cache.ehcache.EhCacheRegionFactory]
	at org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:501)
	at org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:289)
	at org.hibernate.cfg.Configuration.buildSettingsInternal(Configuration.java:2356)
	at org.hibernate.cfg.Configuration.buildSettings(Configuration.java:2352)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1788)
	at org.hibernate.ejb.EntityManagerFactoryImpl.<init>(EntityManagerFactoryImpl.java:96)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:914)
	... 52 more
Caused by: org.hibernate.service.classloading.spi.ClassLoadingException: Unable to load class [org.hibernate.cache.ehcache.EhCacheRegionFactory]
	at org.hibernate.service.classloading.internal.ClassLoaderServiceImpl.classForName(ClassLoaderServiceImpl.java:149)
	at org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:484)
	... 58 more
Caused by: java.lang.ClassNotFoundException: Could not load requested class : org.hibernate.cache.ehcache.EhCacheRegionFactory
	at org.hibernate.service.classloading.internal.ClassLoaderServiceImpl$AggregatedClassLoader.findClass(ClassLoaderServiceImpl.java:296)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:249)
	at org.hibernate.service.classloading.internal.ClassLoaderServiceImpl.classForName(ClassLoaderServiceImpl.java:146)
	... 59 more
[uaf-guarantee] 2015-01-17 01:17:36,295 INFO [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316) | Loading XML bean definitions from class path resource [applicationContext-test.xml]
[uaf-guarantee] 2015-01-17 01:17:36,296 ERROR [main] org.springframework.test.context.TestContextManager.prepareTestInstance(334) | Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@764b3f8b] to prepare test instance [me.kafeitu.demo.activiti.dao.LeaveDaoTest@4638fb59]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:101)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:331)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:213)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:290)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:292)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: IOException parsing XML document from class path resource [applicationContext-test.xml]; nested exception is java.io.FileNotFoundException: class path resource [applicationContext-test.xml] cannot be opened because it does not exist
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:343)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:187)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:251)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadBeanDefinitions(AbstractGenericContextLoader.java:253)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:122)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:100)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:250)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:64)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:91)
	... 31 more
Caused by: java.io.FileNotFoundException: class path resource [applicationContext-test.xml] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:172)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:329)
	... 43 more
[uaf-guarantee] 2015-01-17 01:17:36,316 INFO [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316) | Loading XML bean definitions from class path resource [applicationContext-test.xml]
[uaf-guarantee] 2015-01-17 01:17:36,318 ERROR [main] org.springframework.test.context.TestContextManager.prepareTestInstance(334) | Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@169da74] to prepare test instance [me.kafeitu.demo.activiti.engine.ProcessEngineTest@4c84f665]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:101)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:331)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:213)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:290)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:292)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: IOException parsing XML document from class path resource [applicationContext-test.xml]; nested exception is java.io.FileNotFoundException: class path resource [applicationContext-test.xml] cannot be opened because it does not exist
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:343)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:187)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:251)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadBeanDefinitions(AbstractGenericContextLoader.java:253)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:122)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:100)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:250)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:64)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:91)
	... 31 more
Caused by: java.io.FileNotFoundException: class path resource [applicationContext-test.xml] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:172)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:329)
	... 43 more
[uaf-guarantee] 2015-01-17 01:17:36,337 INFO [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316) | Loading XML bean definitions from class path resource [applicationContext-test.xml]
[uaf-guarantee] 2015-01-17 01:17:36,338 ERROR [main] org.springframework.test.context.TestContextManager.prepareTestInstance(334) | Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@dc0adca] to prepare test instance [me.kafeitu.demo.activiti.service.oa.leave.LeaveManagerTest@64d1afd3]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:101)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:331)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:213)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:290)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:292)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: IOException parsing XML document from class path resource [applicationContext-test.xml]; nested exception is java.io.FileNotFoundException: class path resource [applicationContext-test.xml] cannot be opened because it does not exist
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:343)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:187)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:251)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadBeanDefinitions(AbstractGenericContextLoader.java:253)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:122)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:100)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:250)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:64)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:91)
	... 31 more
Caused by: java.io.FileNotFoundException: class path resource [applicationContext-test.xml] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:172)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:329)
	... 43 more
[uaf-guarantee] 2015-01-17 01:17:36,382 DEBUG [main] org.activiti.engine.impl.test.TestHelper.getProcessEngine(231) | ==== BUILDING PROCESS ENGINE ========================================================================
[uaf-guarantee] 2015-01-17 01:17:36,386 INFO [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316) | Loading XML bean definitions from class path resource [activiti.cfg.xml]
[uaf-guarantee] 2015-01-17 01:17:36,394 DEBUG [main] org.activiti.engine.impl.test.TestHelper.annotationDeploymentTearDown(118) | annotation @Deployment deletes deployment for LeaveWebserviceInWorkflowTest.testWithWebservice
[uaf-guarantee] 2015-01-17 01:17:36,404 DEBUG [main] org.activiti.engine.impl.test.TestHelper.getProcessEngine(231) | ==== BUILDING PROCESS ENGINE ========================================================================
[uaf-guarantee] 2015-01-17 01:17:36,406 INFO [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316) | Loading XML bean definitions from class path resource [activiti.cfg.xml]
[uaf-guarantee] 2015-01-17 01:17:36,408 DEBUG [main] org.activiti.engine.impl.test.TestHelper.annotationDeploymentTearDown(118) | annotation @Deployment deletes deployment for LeaveWebserviceInWorkflowTest.testWithWebserviceFalse
[uaf-guarantee] 2015-01-17 01:17:36,463 INFO [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316) | Loading XML bean definitions from class path resource [applicationContext-test.xml]
[uaf-guarantee] 2015-01-17 01:17:36,465 ERROR [main] org.springframework.test.context.TestContextManager.prepareTestInstance(334) | Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5704a4b6] to prepare test instance [me.kafeitu.demo.activiti.service.oa.leave.LeaveWorkflowServiceTest@71d9d55b]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:101)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:331)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:213)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:290)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:292)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: IOException parsing XML document from class path resource [applicationContext-test.xml]; nested exception is java.io.FileNotFoundException: class path resource [applicationContext-test.xml] cannot be opened because it does not exist
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:343)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:187)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:251)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadBeanDefinitions(AbstractGenericContextLoader.java:253)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:122)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:100)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:250)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:64)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:91)
	... 31 more
Caused by: java.io.FileNotFoundException: class path resource [applicationContext-test.xml] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:172)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:329)
	... 43 more
[uaf-guarantee] 2015-01-17 01:17:36,512 INFO [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316) | Loading XML bean definitions from class path resource [applicationContext-test.xml]
[uaf-guarantee] 2015-01-17 01:17:36,513 ERROR [main] org.springframework.test.context.TestContextManager.prepareTestInstance(334) | Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5712bd54] to prepare test instance [me.kafeitu.demo.activiti.web.user.UserControllerTest@f4c0275]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:101)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:331)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:213)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:290)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:292)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: IOException parsing XML document from class path resource [applicationContext-test.xml]; nested exception is java.io.FileNotFoundException: class path resource [applicationContext-test.xml] cannot be opened because it does not exist
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:343)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:187)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:251)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadBeanDefinitions(AbstractGenericContextLoader.java:253)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:122)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:100)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:250)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:64)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:91)
	... 31 more
Caused by: java.io.FileNotFoundException: class path resource [applicationContext-test.xml] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:172)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:329)
	... 43 more
[uaf-guarantee] 2015-01-17 01:17:36,519 INFO [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(316) | Loading XML bean definitions from class path resource [applicationContext-test.xml]
[uaf-guarantee] 2015-01-17 01:17:36,519 ERROR [main] org.springframework.test.context.TestContextManager.prepareTestInstance(334) | Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener@5712bd54] to prepare test instance [me.kafeitu.demo.activiti.web.user.UserControllerTest@7eedec92]
java.lang.IllegalStateException: Failed to load ApplicationContext
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.DefaultTestContext.getApplicationContext(DefaultTestContext.java:101)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:109)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:75)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:331)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:213)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:290)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:292)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:233)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:87)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:176)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.springframework.beans.factory.BeanDefinitionStoreException: IOException parsing XML document from class path resource [applicationContext-test.xml]; nested exception is java.io.FileNotFoundException: class path resource [applicationContext-test.xml] cannot be opened because it does not exist
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:343)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:303)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:180)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:187)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:251)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadBeanDefinitions(AbstractGenericContextLoader.java:253)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:122)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:100)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:250)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContextInternal(CacheAwareContextLoaderDelegate.java:64)
	at org.springframework.test.context.CacheAwareContextLoaderDelegate.loadContext(CacheAwareContextLoaderDelegate.java:91)
	... 31 more
Caused by: java.io.FileNotFoundException: class path resource [applicationContext-test.xml] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:172)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:329)
	... 43 more
